@using ERP.Helpers
@using Microsoft.AspNetCore.Http;
@inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessor
@model Business.Entities.OurProduct.OurProduct;
<form class="form-horizontal" role="form" id="formAddOurProduct">

    <input type="hidden" formaction="@Url.Action("SetSession")" />
    @if (Model != null)
    {
        string test = HttpContextAccessor.HttpContext.Session.GetString("ItemCollectionID");
        if (!string.IsNullOrEmpty(test))
        {
            <input type="hidden" asp-for="ItemCollectionID" value="@test" />
        }
    }
    <div class="row mt-3">
        <div class="col-md-12">
            <div class="row mb-3">
                <input type="hidden" asp-for="ItemForRFQID" />
                <input type="hidden" asp-for="Item" id="Item" />
                <label class="col-sm-3 col-form-label">Item Group<span class="required">*</span></label>
                <div class="col-sm-9">
                    <input type="text" required="" class="form-control" id="ItemGroup"
                           name="ItemGroup" asp-for="ItemGroup" placeholder="" readonly>
                    <span asp-validation-for="ItemGroup" class="text-danger"></span>
                </div>
            </div>

            <div class="row mb-3">
                <label class="col-sm-3 col-form-label">Item<span class="required">*</span></label>
                <div class="col-sm-9">
                    @*    <input type="text" required="" class="form-control" id="Item"
                    name="Item" asp-for="Item" placeholder="" readonly>
                    <span asp-validation-for="Item" class="text-danger"></span> *@
                    <select class="form-select" id="choices-multiple-remove-button-Items" asp-items="@CommonExtension.GetAllSAPItemAsyncByItemGroup(Model.ItemGroup)" multiple>
                        <option value="">Select here...</option>
                    </select>
                </div>
            </div>

            <div class="row mb-3">
                <label for="" class="col-sm-3 col-form-label">UOM<span class="required">*</span></label>
                <div class="col-sm-9">
                    <select asp-for="UOMID" asp-items="ViewBag.UOMID" class="form-control">
                        <option value="">Select Units</option>
                    </select>
                    <span asp-validation-for="UOMID" class="text-danger"></span>
                </div>
            </div>

            @*            <div class="row mb-3">
            <label class="col-sm-3 col-form-label">Quantity<span class="required">*</span></label>
            <div class="col-sm-9">
            <input type="text" class="form-control" id="Quantity" name="Quantity" asp-for="Quantity" required="">
            <span asp-validation-for="Quantity" class="text-danger "></span>
            </div>
            </div> *@

            <div class="row mb-3">
                <label class="col-sm-3 col-form-label">Description</label>
                <div class="col-sm-9">
                    <textarea type="text" class="form-control" rows="4" id="ItemDescription" name="ItemDescription" asp-for="ItemDescription"></textarea>
                    <span asp-validation-for="ItemDescription" class="text-danger "></span>
                </div>
            </div>


            <div class="modal-footer-sticky text-center">
                <button id="btnSave" type="button" onclick="fnSubmit()" class="btn btn-primary btn-info px-5 ladda-button">Submit</button>
                <button type="button" data-bs-dismiss="offcanvas" class="btn btn-primary btn-info px-5 my-2">Back</button>
            </div>
        </div>
    </div>
</form>
@await Html.PartialAsync("_ValidationScriptsPartial")

<script type="text/javascript">
    var urlsave = '@Url.Action("AddOurProduct", "OurProduct")';
    function fnSubmit() {

        const itemArray = document.getElementById('choices-multiple-remove-button-Items');
        var selectedItems = [];
        for (let i = 0; i < itemArray.options.length; i++) {
            const option = itemArray.options[i];
            if (option.selected) {
                selectedItems.push(option.value);
            }
        }
        document.getElementById("Item").value = selectedItems.toString();

        if ($("#formAddOurProduct").valid()) {
            var l = laddaStart('btnSave');
            console.log(l);
            modeldata = $("#formAddOurProduct").serialize();
            $.ajax({
                type: 'POST',
                url: urlsave,
                data: modeldata,
                dataType: 'json',
                beforeSend: function () { },
                success: function (data) {
                    window.location.reload().delay(3000);
                    if (data.status) {
                        //notification
                        $("#formAddOurProduct").hide();//('hide');
                        Lobibox.notify('success', {
                            pauseDelayOnHover: true,
                            size: 'mini',
                            icon: 'bx bx-check-circle',
                            continueDelayOnInactiveTab: false,
                            position: 'bottom right',
                            msg: data.message
                        });
                        window.location.href = "/Admin/OurProduct/Index";
                    }
                    else {
                        Lobibox.notify('error', {
                            pauseDelayOnHover: true,
                            size: 'mini',
                            icon: 'bx bx-check-circle',
                            continueDelayOnInactiveTab: false,
                            position: 'bottom right',
                            msg: data.message
                        });
                    }
                },
                error: function (error) {
                    laddaStop(l);
                    Lobibox.notify('error', {
                        pauseDelayOnHover: true,
                        size: 'mini',
                        icon: 'bx bx-check-circle',
                        continueDelayOnInactiveTab: false,
                        position: 'bottom right',
                        msg: "@MessageHelper.Error"
                    });
                }
            }).always(function () {
                hideLoader();
            });
        }
    };


    $(document).ready(function () {

        const itemArray = document.getElementById('Item').value;

        if (itemArray !== '') {
            $.each(itemArray.split(","), function (i, e) {
                $("#choices-multiple-remove-button-Items option[value='" + e + "']").prop("selected", true);
            });
        }

        var multipleCancelButtonOperators = new Choices('#choices-multiple-remove-button-Items', {
            removeItemButton: true,
            maxItemCount: 1000,
            searchResultLimit: 1000,
            renderChoiceLimit: 10,
        });
    });

</script>
