@using ERP.Helpers
@model Business.Entities.Marketing.CommunicationLog.CommunicationLog;
@{
    Layout = "~/Views/Shared/_LayoutMaster.cshtml";
    ViewBag.Title = "Communication Log Details..";
}
@{
    int i = 0;
    int index = Model.marketingCommunicationLogDetails.Count();
    int? userId = ViewBag.UserID;
    int? companyId = ViewBag.CompanyID;


}
<div class="card border-1 shadow rounded-7 p-3">
    <div class="page-breadcrumb d-none d-sm-flex align-items-center pb-3 border-bottom">
        <div class="ps-3 col-md-6">
            <nav aria-label="breadcrumb">
                <ol class="breadcrumb mb-0 p-0">
                    <li class="breadcrumb-item">
                        <a asp-controller="MarketingCommunicationLog" asp-action="Index" asp-area="Marketing"><i class="bx bx-home-alt"></i></a>
                    </li>
                    <li class="breadcrumb-item active" aria-current="page">Communication Log</li>
                </ol>
            </nav>
        </div>

    </div>
    <form class="form-horizontal" role="form" id="formMarketingCommunicationLog">
        <input type="hidden" asp-for="PositiveNotesArray" name="PositiveNotesArray" id="PositiveNotesArray" />
        <input type="hidden" asp-for="EmployeeID" name="EmployeeID" id="EmployeeID" />
        <input type="hidden" asp-for="PartyID" name="PartyID" id="PartyID" />
        <input type="hidden" asp-for="EmployeeName" name="EmployeeName" id="EmployeeName" />
        <div class="row mt-3">
            <div class="col-md-12">
                <div class="row mb-3">
                    <input type="hidden" asp-for="MarketingCommunicationLogID" />
                    <label class="col-sm-3 col-form-label">Contact By Person<span class="required">*</span></label>
                    <div class="col-sm-3">
                        @*    <input type="text" required="" class="form-control" id="ContactByPerson" name="ContactByPerson" asp-for="ContactByPerson">
                        <span asp-validation-for="ContactByPerson" class="text-danger"></span>*@
                        <select class="form-select" id="choices-multiple-remove-button-employee" asp-for="EmployeeID" asp-items="@EmployeeExtension.GetAllEmployeesForDropDown(userId, companyId)">
                            <option value="">Select Person</option>
                        </select>
                    </div>
                </div>

                <div class="row mb-3">
                    <label class="col-sm-3 col-form-label">Contact To<span class="required">*</span></label>
                    @*         <div class="col-sm-9">
                    <input type="text" required="" class="form-control" id="ContactTo" name="ContactTo" asp-for="ContactTo">
                    <span asp-validation-for="ContactTo" class="text-danger"></span>
                    </div>*@
                    <div class="col-sm-6">
                        @*       <input type="text" required="" class="form-control" id="PartyName" name="PartyName" asp-for="PartyName">
                        <span asp-validation-for="PartyName" class="text-danger"></span>*@
                        <select class="form-select" onchange="fnFillPartyMobileEmail()" id="choices-multiple-remove-button-party" asp-items="@MarketingExtension.GetAllPartyName()">
                            @*<option value="">--Select--</option>*@
                            <option value="">Select Contact</option>
                        </select>
                    </div>
                    <div class="col-sm-2 h3">
                        <a class="MCLFAB" title="Add new customer/party" data-bs-toggle="modal" data-bs-target="#ModalMail"><iconify-icon icon="material-symbols:add-circle-outline-rounded" class="parent-icon"></iconify-icon></a>
                        &nbsp;
                        <a class="MCLFAB" title="Go to customer/party page!" asp-area="Marketing" asp-controller="Party" asp-action="AddUpdateParty" asp-route-id="0" target="_blank" id=""><iconify-icon icon="mingcute:link-line" class="parent-icon"></iconify-icon></a>
                    </div>
                </div>

                <div class="row mb-3">
                    <label class="col-sm-3 col-form-label">Contact Channel<span class="required">*</span></label>
                    <div class="col-sm-3">
                        <select asp-for="ContactChannelTypeID" asp-items="ViewBag.ContactChannelText" class="form-control" required="">
                            <option value="">Select Contact Channel...</option>
                        </select>
                        <span asp-validation-for="ContactChannelTypeID" class="text-danger "></span>
                    </div>
                </div>

                <div class="row mb-3">
                    <label class="col-sm-3 col-form-label">Email</label>
                    <div class="col-sm-3">
                        <input type="text" class="form-control" id="Email" name="Email" asp-for="Email">
                    </div>
                </div>

                <div class="row mb-3">
                    <label class="col-sm-3 col-form-label">Mobile No.<span class="required">*</span></label>
                    <div class="col-sm-3">
                        <input type="text" class="form-control" id="MobileNo" name="MobileNo" asp-for="MobileNo" required="">
                        <span asp-validation-for="MobileNo" class="text-danger "></span>
                    </div>
                </div>

                <div class="row mb-3">
                    <label class="col-sm-3 col-form-label">Venue Type</label>
                    <div class="col-sm-3">
                        <select asp-for="VenueTypeID" asp-items="ViewBag.VenueTypeText" class="form-control">
                            <option value="">Select Venue Type...</option>
                        </select>
                    </div>
                </div>

                <div class="row mb-3">
                    <label class="col-sm-3 col-form-label">Party Type</label>
                    <div class="col-sm-3">
                        <select asp-for="PartyTypeID" asp-items="ViewBag.PartyTypeText" class="form-control">
                            <option value="">Select Party Type...</option>
                        </select>
                    </div>
                </div>

                <div class="row mb-3">
                    <label class="col-sm-3 col-form-label">Date</label>
                    <div class="col-sm-2">
                        <input type="datetime-local" class="form-control" id="CommunicationLogDate" name="CommunicationLogDate" asp-for="CommunicationLogDate">
                    </div>
                </div>

                @*  <div class="row mb-3">
                <label class="col-sm-3 col-form-label">Place Of Meeting</label>
                <div class="col-sm-9">
                <input type="text" class="form-control" id="PlaceOfMeeting" name="PlaceOfMeeting" asp-for="PlaceOfMeeting">
                </div>
                </div> *@


                <!-- Important code, Commented by Rahul Mistry
                @*<div class="row mb-3">
                    <label class="col-sm-3 col-form-label">Feedback</label>
                    <div class="col-sm-9">
                        <select class="form-select" id="choices-multiple-remove-button" asp-items="@MarketingExtension.GetAllMarketingClientFeedbackNote()" multiple>
                            @*<option value="">--Select--</option>
                        </select>
                    </div>
                </div>*@-->

                <div class="row mb-3">
                    <label class="col-sm-3 col-form-label">Feedback/Communication</label>
                    <div class="col-sm-9">

                        <a class="MCLFAB fa-lg" id="btnAddFeedback"><iconify-icon icon="material-symbols:add-circle-outline-rounded" class="parent-icon"></iconify-icon></a>
                        <div class="col-sm-12">
                        </div>

                        <div id="addMoreFeedback">

                            @if (Model != null)
                            {
                                if (Model.marketingCommunicationLogDetails.Count > 0)
                                {
                                    foreach (var item in Model.marketingCommunicationLogDetails)
                                    {
                                        <div id="@("removeAddMoreDiv" +i)" class="col-xs-12 col-sm-12 form-group">
                                            <input type="hidden" asp-for="@item.MarketingCommunicationLogDetailID" id="MarketingCommunicationLogDetailID" name="MarketingCommunicationLogDetailID" />
                                            <input type="hidden" asp-for="@item.MarketingCommunicationLogID" id="MarketingCommunicationLogID" name="MarketingCommunicationLogID" />

                                            <div class="row" id="@("removeAddMoreSubDiv" +i)">
                                                <div class="col-sm-4 col-md-4 col-lg-4 col-xl-4">
                                                    <select class='form-select' asp-for="@item.PositiveNoteID" name="@("SelectName"+i)" id="@("selectedId" + i)" asp-items="@MarketingExtension.GetAllMarketingClientFeedbackNote()" onchange="fnShowSelectedNoteResponse(this)">
                                                    </select>
                                                </div>
                                                <div class="col-sm-4 col-md-4 col-lg-4 col-xl-4">
                                                    <input placeholder="Response" type="text" class="form-control" asp-for="@item.Response" name="@("Response"+i)" id="@("selectedResponse"+i)" />
                                                </div>
                                                <div class="ccol-sm-1 col-md-1 col-lg-1 col-xl-1">

                                                    @*MCLFSB MarketingCommunicationLogFeedbackStoreButton*@
                                                    @* <a class="MCLFSB fa-2x" id="btnRemove" onclick="@("fnLockDiv("+i+")")"><iconify-icon icon="material-symbols:arrow-circle-right-outline-rounded"></iconify-icon></a>&ensp;*@

                                                    @*MCLFRB MarketingCommunicationLogFeedbackRemoveButton*@
                                                    <a class="MCLFRB fa-2x" id="btnRemove" onclick="@("fnRemoveDiv("+i+")")"><iconify-icon icon="mdi:remove-circle-outline"></iconify-icon></a>
                                                </div>
                                            </div>
                                        </div>
                                        i++;
                                    }
                                }
                            }
                        </div>

                        @*     <select class="form-select" id="choices-multiple-remove-button" asp-items="@MarketingExtension.GetAllMarketingClientFeedbackNote()" multiple>
                        @*<option value="">--Select--</option>
                        </select>*@
                    </div>
                </div>

                <div class="row mb-3">
                    <label class="col-sm-3 col-form-label">Notes</label>
                    <div class="col-sm-9">
                        <textarea class="form-control" rows="4" id="Note" name="Note" asp-for="Note" placeholder="If you want add more detail, use it."></textarea>
                    </div>
                </div>

                @*<div class="row mb-3 pb-3">
                <label class="col-sm-3 col-form-label">Feedback</label>
                <div class="col-sm-9">
                <textarea class="form-control" rows="4" id="Feedback" name="Feedback" asp-for="Feedback"></textarea>
                <span asp-validation-for="Feedback" class="text-danger "></span>
                </div>
                </div>*@



                <div class="row">
                    <div class="col-sm-6 col-md-6 col-lg-6 col-lx-6">
                        <label for="" class="col-form-label">Sent Document</label>
                        @*<div class="col-sm-9">*@
                        <input type="checkbox" class="form-check-input" asp-for="IsSentDocument" data-on-text="Yes" data-off-text="No">
                        @*</div>*@
                    </div>

                    <div class="col-sm-6 col-md-6 col-lg-6 col-lx-6">
                        <label for="" class="col-form-label">Sent Marketing Document</label>
                        @*<div class="col-sm-9">*@
                        <input type="checkbox" class="form-check-input" asp-for="IsSentMarketingDocument" data-on-text="Yes" data-off-text="No">
                        @*</div>*@
                    </div>
                </div>


                <div class="row mb-3">
                    <div class="col-sm-12 col-md-12 col-lg-12 col-lx-12">
                        <label for="" class="col-form-label">They provided any other reference for better business</label>
                        <input type="checkbox" class="form-check-input" asp-for="ReferenceBetterBusiness" data-on-text="Yes" data-off-text="No">
                    </div>
                </div>

                <div class="row mb-3">
                    <label class="col-sm-3 col-form-label">If provided reference, Mobile No / Email Id</label>
                    <div class="col-sm-3">
                        <input type="text" class="form-control" id="ReferenceMobileOrEmail" name="ReferenceMobileOrEmail" asp-for="ReferenceMobileOrEmail">
                    </div>
                </div>

                <input type="hidden" id="FeedbackNoteID" asp-for="FeedbackNoteID" name="FeedbackNoteID" />

                @*<div class="modal-footer-sticky text-center">*@
                <div class="text-center">
                    <button id="btnSave" type="button" onclick="fnSubmit()" class="btn btn-primary btn-info px-5 ladda-button">Submit</button>
                    <a class="btn btn-primary btn-info px-5 my-2" asp-controller="MarketingCommunicationLog" asp-action="Index" asp-area="Marketing">Back</a>
                </div>
            </div>
        </div>
    </form>
    <div class="modal fade" id="ModalMail" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h1 class="modal-title fs-5" id="exampleModalLabel">Add Party</h1>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form>
                        <div class="row mb-3">
                            <div class="col-3">
                                <label class=" col-form-label">Party name:</label>
                            </div>
                            <div class="col-9">
                                <input type="email" class="form-control" id="partyName">
                            </div>
                        </div>
                        <div class="row mb-3">
                            <div class="col-3">
                                <label class="col-form-label">Mobile No:</label>
                            </div>
                            <div class="col-9">
                                <input type="text" class="form-control" id="partyMobile">
                            </div>
                        </div>
                        <div class="row mb-3">
                            <div class="col-3">
                                <label class="col-form-label">Email:</label>
                            </div>
                            <div class="col-9">
                                <input type="text" class="form-control" id="partyEmail">
                                @*<textarea class="form-control" id="messageBox" rows="5"></textarea>*@
                                @*<textarea class="form-control" id="editor" name="editor"></textarea>*@
                            </div>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-primary" onclick="fnAddParty()">Submit</button>
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Back</button>
                </div>
            </div>
        </div>
    </div>
</div>
<!--Below code added by Rahul Mistry for Send Mail canvas popup 26-06-2024-->
<div class="offcanvas offcanvas-bottom" tabindex="-1" id="canvasRaiseTicket" aria-labelledby="offcanvasCompanyLabel" style="height: auto; width: auto; margin: 20% 20%;">
    <div class="offcanvas-header">
        <h5 class="offcanvas-title" id="canvasRaiseTicketHeader">Send email & raise a ticket</h5>
        <button type="button" class="btn-close te  xt-reset" data-bs-dismiss="offcanvas" aria-l abel="Close"></button>
    </div>
    <div class="offcanvas-body pt-3 pb-5">
        <div id="dvInfoRaiseTicket">
            <div class="row mb-3">
                <div class="col-3">
                    <label for="recipient-name" class=" col-form-label">To:</label>
                </div>
                <div class="col-9">
                    <input type="email" class="form-control" id="recipientToNameForTicketRaise">
                </div>
            </div>
            <div class="row mb-3">
                <div class="col-3">
                    <label for="recipient-name" class="col-form-label">Subject:</label>
                </div>
                <div class="col-9">
                    <input type="text" class="form-control" id="subjectLineForTicketRaise">
                </div>
            </div>
            <div class="row mb-3">
                <div class="col-3">
                    <label for="message-text" class="col-form-label">Message:</label>
                </div>
                <div class="col-9">
                    <textarea class="form-control" id="messageBoxForTicketRaise" rows="5"></textarea>
                </div>
            </div>
        </div>
    </div>
    <div class="modal-footer-sticky text-center">
        <button id="btnSendMail" type="button" onclick="fnSendMailRaiseTicket()" class="btn btn-primary btn-info px-5 ladda-button">Send Mail</button>
        <button type="button" class="btn btn-primary btn-info px-5 ladda-button" data-bs-dismiss="offcanvas" aria-l="" abel="Close">Back</button>
    </div>
</div>
<!--Above code added by Rahul Mistry for Send Mail canvas popup 26-06-2024-->
<!--Below code added by Rahul Mistry for Set Reminder canvas popup 27-06-2024-->
<div class="offcanvas offcanvas-bottom" tabindex="-1" id="canvasSetReminder" aria-labelledby="offcanvasCompanyLabel" style="height: auto; width: auto; margin: 20% 20%;">
    <div class="offcanvas-header">
        <h5 class="offcanvas-title" id="canvasSetReminderHeader"><iconify-icon icon="fluent-mdl2:reminder-time"></iconify-icon><span>&nbsp; &nbsp; Add Reminder</span></h5>
        <button type="button" class="btn-close te  xt-reset" data-bs-dismiss="offcanvas" aria-l abel="Close"></button>
    </div>
    <div class="offcanvas-body pt-3 pb-5">
        <div id="dvInfoSetReminder">
            <div class="row mb-3">
                <div class="col-3">
                    <label for="recipient-name" class="col-form-label">Date:</label>
                </div>
                <div class="col-9">
                    <input type="date" class="form-control" id="reminderDateCommunication" name="reminderDate" placeholder="dd-mm-yyyy" value="">
                    <span id="date-error"></span>
                </div>
            </div>
            <div class="row mb-3">
                <div class="col-3">
                    <label for="recipient-name" class="col-form-label">Time:</label>
                </div>
                <div class="col-9">
                    <input type="time" class="form-control" id="reminderTimeCommunication" name="reminderTime">
                    <span id="time-error"></span>
                </div>
            </div>
            <div class="row mb-3">
                <div class="col-3">
                    <label for="recipient-name" class="col-form-label">Subject:</label>
                </div>
                <div class="col-9">
                    <input type="text" class="form-control" id="reminderSubjectCommunication">
                </div>
            </div>
            <div class="row mb-3">
                <div class="col-3">
                    <label for="recipient-name" class="col-form-label">Description:</label>
                </div>
                <div class="col-9">
                    <textarea class="form-control" id="reminderTextCommunication" rows="3"></textarea>
                </div>
            </div>
        </div>
    </div>
    <div class="modal-footer-sticky text-center">
        <button id="btnSetReminder" type="button" onclick="fnSetReminder()" class="btn btn-primary btn-info px-5 ladda-button">Set Reminder</button>
        <button type="button" class="btn btn-primary btn-info px-5 ladda-button" data-bs-dismiss="offcanvas" aria-l="" abel="Close">Back</button>
    </div>
</div>
<!--Above code added by Rahul Mistry for Set Reminder canvas popup 27-06-2024-->
@await Html.PartialAsync("_ValidationScriptsPartial")
<script type="text/javascript">
    var i = 0;
    var urlsave = '@Url.Action("InsertOrUpdateMarketingCommunicationLog", "MarketingCommunicationLog")';
    var div = document.getElementById('addMoreFeedback');
    var selectedValue = div.querySelectorAll("select");
    var inputValues = div.querySelectorAll("input[type='text']");
    var divIdsArray = [];
    //$(document).ready(function () {
    //    let feedbackNoteIds = document.getElementById("FeedbackNoteID").value;
    //    $.each(feedbackNoteIds.split(","), function (i, e) {
    //        $("#choices-multiple-remove-button option[value='" + e + "']").prop("selected", true);
    //    });
    //});

    function fnSubmit() {

        var drpArray = [];
        var elements1 = div.querySelectorAll('select, input');
        if (elements1.length > 0) {
            for (var k = 0; k < elements1.length; k++) {
                drpArray.push(elements1[k].value);
            }
        }
        let feedbackIds = document.getElementById("FeedbackNoteID");
        let positiveIdsNotes = document.getElementById('PositiveNotesArray');
        positiveIdsNotes.value = drpArray.toString();

        let employeeNameDrp = document.getElementById('choices-multiple-remove-button-employee');
        let selectedEmployeeIndex = employeeNameDrp.options[employeeNameDrp.selectedIndex];

        let employeeNameLabel = selectedEmployeeIndex.text;
        let employeeIdValue = selectedEmployeeIndex.value;

        let employeeName = document.getElementById("EmployeeName");
        employeeName.value = employeeNameLabel;

        let employeeIds = document.getElementById("EmployeeID");
        employeeIds.value = employeeIdValue;


        let partyNameDrp = document.getElementById('choices-multiple-remove-button-party');
        let selectedPartyIndex = partyNameDrp.options[partyNameDrp.selectedIndex];
        let partyIdValue = selectedPartyIndex.value;
        if (partyIdValue == null || partyIdValue == "") {
            alert("Select Contact To.");
            return false;
        }
        let partyIds = document.getElementById("PartyID");
        partyIds.value = partyIdValue;

        if ($("#formMarketingCommunicationLog").valid()) {
            var l = laddaStart('btnSave');
            console.log(l);
            modeldata = $("#formMarketingCommunicationLog").serialize();
            $.ajax({
                type: 'POST',
                url: urlsave,
                data: modeldata,
                dataType: 'json',
                beforeSend: function () { },
                success: function (data) {
                    if (data.status) {
                        //notification
                        $("#canvas_CommunicatioLog").hide();//('hide');
                        Lobibox.notify('success', {
                            pauseDelayOnHover: true,
                            size: 'mini',
                            icon: 'bx bx-check-circle',
                            continueDelayOnInactiveTab: false,
                            position: 'bottom right',
                            msg: data.message
                        });

                    }
                    else {
                        Lobibox.notify('error', {
                            pauseDelayOnHover: true,
                            size: 'mini',
                            icon: 'bx bx-check-circle',
                            continueDelayOnInactiveTab: false,
                            position: 'bottom right',
                            msg: data.message
                        });
                    }
                    window.location.reload().delay(6000);
                },
                error: function (error) {
                    laddaStop(l);
                    Lobibox.notify('error', {
                        pauseDelayOnHover: true,
                        size: 'mini',
                        icon: 'bx bx-check-circle',
                        continueDelayOnInactiveTab: false,
                        position: 'bottom right',
                        msg: "@MessageHelper.Error"
                    });
                }
            }).always(function () {
                hideLoader();
            });
        }
    };

    // Added by Rahul Mistry on 17 Apr 2023

    $(document).ready(function () {
        $('#btnAddFeedback').click(function () {

            //$('#btnAddFeedback').on('click', function () {
            let noOfIs = @index;
            if (noOfIs > 0 && i <= noOfIs) {
                i = noOfIs;
                //i++;
            }

            var newDiv = "<div id='removeAddMoreDiv" + i + "' class='col-xs-12 col-sm-12 form-group'><input type='hidden' id='MarketingCommunicationLogDetailID' name='MarketingCommunicationLogDetailID' value='0'/><input type='hidden' id='MarketingCommunicationLogID' name='MarketingCommunicationLogID' value='" + @Model.MarketingCommunicationLogID+"'/><div class='row' id='removeAddMoreSubDiv" + i + "'><div class='col-sm-4 col-md-4 col-lg-4 col-xl-4'><select class='form-select' name='SelectName" + i + "' id='selectedId" + i + "' onchange='fnLockDiv(" + i + "); fnShowSelectedNoteResponse(this)'></select></div><div class='col-sm-4 col-md-4 col-lg-4 col-xl-4'><input type='text' class='form-control' name='Response" + i + "' id='selectedResponse" + i + "' onchange='fnLockDiv(" + i + ")'/></div><div class='col-sm-1 col-md-1 col-lg-1 col-xl-1'><a class='MCLFRB fa-2x' id='btnRemove' onclick='fnRemoveDiv(" + i + ")'><iconify-icon icon='mdi:remove-circle-outline'></iconify-icon></a></div></div></div>";

            /*BELOW CODE IMPORTANT CODE

            //var newDiv = "<div id='removeAddMoreDiv" + i + "' class='col-xs-12 col-sm-12 form-group'><input type='hidden' id='MarketingCommunicationLogDetailID' name='MarketingCommunicationLogDetailID' value='0'/><input type='hidden' id='MarketingCommunicationLogID' name='MarketingCommunicationLogID' value='" + @Model.MarketingCommunicationLogID+"'/><div class='row'><div class='col-md-4'><select class='form-select' name='SelectName" + i + "' id='selectedId" + i + "' onchange='fnLockDiv(" + i + ")'></select></div><div class='col-md-4'><input type='text' class='form-control' name='Response" + i + "' id='selectedResponse" + i + "' onchange='fnLockDiv(" + i + ")'/></div><div class='col-md-4'><a class='MCLFSB fa-2x' id='btnRemove' onclick='fnLockDiv(" + i + ")'><iconify-icon icon='material-symbols:arrow-circle-right-outline-rounded'></iconify-icon><a>&ensp;<a class='MCLFRB fa-2x' id='btnRemove' onclick='fnRemoveDiv(" + i + ")'><iconify-icon icon='mdi:remove-circle-outline'></iconify-icon></a></div></div></div>";

            ABOVE CODE IMPORTANT CODE   */

            div.innerHTML += newDiv;

            var myselected = document.getElementById('selectedId' + i);

            $.getJSON("/Marketing/MarketingCommunicationLog/GetAllMarketingClientFeedbackNote/",
                function (data) {
                    var newHTML = "";
                    for (var l = 0; l < data.length; l++) {
                        newHTML += "<option id='" + data[l].actionTaken + "' value='" + data[l].positiveNoteID + "'>" + data[l].positiveNoteText + "</option>";
                    }
                    //employeeDropdown.innerHTML = newHTML;
                    myselected.innerHTML = newHTML;
                });
            i++;


            $(function () {
                for (var j = 0; j < divIdsArray.length; j++) {
                    var divContent = divIdsArray[j];
                    //var inputvalue = inputValues[j].value;
                    var test = localStorage.getItem(divContent);
                    document.getElementById(divIdsArray[j]).value = test;
                    //selectedValues.push(selectedDrps[j].value);
                }
            });
            //$(function () {   //  Code block for hold selected values.


            //    $("#removeAddMoreDiv" + i).load(window.location.href + " #removeAddMoreDiv" + i);

            //    var selectedDrps = div.querySelectorAll("select");
            //    var selectedValues = [];
            //    for (var m = 0; m < selectedDrps.length; m++) {

            //        selectedDrps[m].onchange = function () {
            //            debugger;
            //            var selectedKey = this.id;
            //            var selectedValue = this.value;
            //            localStorage.setItem(selectedKey, selectedValue);
            //        };
            //        //selectedValues.push(selectedDrps[m].value);
            //    }

            //    for (var n = 0; n < selectedDrps.length; n++) {
            //        var selectedKey = selectedDrps[n].id; // Get the ID of the <select> element
            //        var savedValue = localStorage.getItem(selectedKey);
            //        debugger;
            //        if (savedValue) {
            //            selectedDrps[n].value = savedValue;
            //        }
            //    }

            //    for (var h = 0; h < inputValues.length; h++) {
            //        debugger;
            //        var inputkey = inputValues[h].id; // Get the ID of the <select> element
            //        document.getElementById(inputkey).value = localStorage.getItem(inputkey);
            //        //var test = '#'+inputkey+'';
            //        //var vals = '';
            //        //vals = savedinputValues;
            //        //debugger
            //        //if (savedinputValues!=null) {
            //        //    document.getElementById(inputkey).value = vals;
            //        //    //inputValues[h].value = savedinputValues;
            //        //}
            //    }
            //});


        });
    });

    function fnRemoveDiv(removeid) {
        const _id = removeid;
        const divRemove = document.getElementById('removeAddMoreDiv' + _id);
        divRemove.remove();
        //$("#addMoreFeedback").load(window.location.href + " #addMoreFeedback");
    };

    function fnLockDiv(lockId) {
        //alert('lock fn invoked with id no.:' + lockId);
        //divIdsArray.push('removeAddMoreDiv' + lockId);
        //const divElement = document.getElementById('removeAddMoreDiv' + lockId);

        const elselect = document.getElementById('selectedId' + lockId);
        divIdsArray.push('selectedId' + lockId);
        localStorage.setItem('selectedId' + lockId, elselect.value);

        const elInput = document.getElementById('selectedResponse' + lockId);
        divIdsArray.push('selectedResponse' + lockId);
        localStorage.setItem('selectedResponse' + lockId, elInput.value);
        //const divElementString = divElement.outerHTML;
    };

    // Added by Rahul Mistry on 17 Apr 2023

    // Added by Rahul Mistry on 5 Jun 2023

    $(document).ready(function () {
        let employeeids = document.getElementById("EmployeeID").value;
        $.each(employeeids.split(","), function (i, e) {
            $("#choices-multiple-remove-button-employee option[value='" + e + "']").prop("selected", true);
        });

        let partyids = document.getElementById("PartyID").value;
        $.each(partyids.split(","), function (i, e) {
            $("#choices-multiple-remove-button-party option[value='" + e + "']").prop("selected", true);
        });
    });

    $(document).ready(function () {
        var multipleCancelButtonEmployee = new Choices('#choices-multiple-remove-button-employee', {
            removeItemButton: false,
            maxItemCount: 10,
            searchResultLimit: 10,
            renderChoiceLimit: 10
        });

        var multipleCancelButtonParty = new Choices('#choices-multiple-remove-button-party', {
            removeItemButton: false,
            maxItemCount: 10,
            searchResultLimit: 10,
            renderChoiceLimit: 10
        });
    });

    // Added by Rahul Mistry on 5 Jun 2023

    // Added by Rahul Mistry on 26 June 2023

    function fnFillPartyMobileEmail() {
        let partyNameDrp = document.getElementById('choices-multiple-remove-button-party');
        let selectedPartyIndex = partyNameDrp.options[partyNameDrp.selectedIndex];

        //let partyNameLabel = selectedPartyIndex.text;
        let partyIdValue = selectedPartyIndex.value;
        let _parameters = { partyId: partyIdValue };
        let urlFillMobEmail = '@Url.Action("GetPartyMobileEmailByPartyID", "MarketingCommunicationLog")';

        $.ajax({
            url: urlFillMobEmail,
            type: "GET",
            data: _parameters,
            success: function (data, textStatus, jqXHR) {
                //document.getElementById('Email').value = data.email;
                //document.getElementById('MobileNo').value = data.mobileNo;
                if (data.status) {
                    if (data.partyMobileEmail.email != null || data.partyMobileEmail.email != "") {
                        document.getElementById('Email').value = data.partyMobileEmail.email;
                    }
                    if (data.partyMobileEmail.mobile1 != null || data.partyMobileEmail.mobile1 != "") {
                        document.getElementById('MobileNo').value = data.partyMobileEmail.mobile1;
                    }
                }
            }
        });

    };


    function fnAddParty() {
        let partyName = $('#partyName').val();
        let partyMobile = $('#partyMobile').val();
        let partyEmail = $('#partyEmail').val();

        let addPartyUrl = '@Url.Action("AddParty", "MarketingCommunicationLog")';
        let _parameters = { partyName: partyName, partyMobile: partyMobile, partyEmail: partyEmail }
        $.ajax({
            type: 'POST',
            url: addPartyUrl,
            data: _parameters,
            dataType: 'json',
            beforeSend: function () { },
            success: function (data) {
                if (data.status) {
                    //notification

                    Lobibox.notify('success', {
                        pauseDelayOnHover: true,
                        size: 'mini',
                        icon: 'bx bx-check-circle',
                        continueDelayOnInactiveTab: false,
                        position: 'bottom right',
                        msg: data.message
                    });
                    $("#ModalMail").modal("hide");
                    //$("#formFeedback").load(window.location.href + " #formFeedback");
                    //$('#ModalMail').hide();
                    window.location.reload().delay(10000);
                }
                else {
                    Lobibox.notify('error', {
                        pauseDelayOnHover: true,
                        size: 'mini',
                        icon: 'bx bx-check-circle',
                        continueDelayOnInactiveTab: false,
                        position: 'bottom right',
                        msg: data.message
                    });
                }
                //window.location.reload().delay(10000);
            },
            error: function (error) {
                laddaStop(l);
                Lobibox.notify('error', {
                    pauseDelayOnHover: true,
                    size: 'mini',
                    icon: 'bx bx-check-circle',
                    continueDelayOnInactiveTab: false,
                    position: 'bottom right',
                    msg: "@MessageHelper.Error"
                });
            }
        }).always(function () {
            hideLoader();
        });
    };
    // Added by Rahul Mistry on 26 June 2023

    // Added by Rahul Mistry on 24 June 2024.
    function fnShowSelectedNoteResponse(obj) {
        var testObjecter = obj;
        var dropdownId = obj.id;
        var dropdown = document.getElementById(obj.id);
        //9    Asked to share Pricelist
        const elselect = document.getElementById(obj.id);
        divIdsArray.push(obj.id);
        localStorage.setItem(obj.id, elselect.value);

        let idIndex = dropdownId.slice(-1);
        var subDiv = document.getElementById('removeAddMoreSubDiv' + idIndex);

        var newItemRaiseTicket = "<div class='col-sm-1 col-md-1 col-lg-1 col-xl-1' id='subDivId" + idIndex + "'><a class='MCLFRB fa-2x' id='btnRaiseTicket" + idIndex + "' onclick='fnRaiseTicket(" + idIndex + ")' title='Raise a ticket.' href='javascript:void(0)' data-bs-toggle='offcanvas' data-bs-target='#canvasRaiseTicket' aria-controls='canvasRaiseTicket'><iconify-icon icon='icon-park-outline:mail-review'></iconify-icon></a></div>";
        var newItemReminder = "<div class='col-sm-1 col-md-1 col-lg-1 col-xl-1' id='subDivId" + idIndex + "'><a class='MCLFRB fa-2x' id='btnSetReminder" + idIndex + "' onclick='fnOpenSetReminder(" + idIndex + ")' title='Set reminder.' href='javascript:void(0)' data-bs-toggle='offcanvas' data-bs-target='#canvasSetReminder' aria-controls='canvasSetReminder'><iconify-icon icon='clarity:alarm-clock-solid-badged'></iconify-icon></a></div>";
        if (dropdown.options[dropdown.selectedIndex].id === 'TICKET' && document.getElementById('subDivId' + idIndex) === null) {
            subDiv.innerHTML += newItemRaiseTicket;
        }
        // if (dropdown.options[dropdown.selectedIndex].id !== 'TICKET' &&  document.getElementById('subDivId' + idIndex) !== null) {
        //     document.getElementById('subDivId' + idIndex).remove();
        // }
        if (dropdown.options[dropdown.selectedIndex].id === 'REMINDER' && document.getElementById('subDivId' + idIndex) === null) {
            subDiv.innerHTML += newItemReminder;
        }
        if (dropdown.options[dropdown.selectedIndex].id !== 'REMINDER' && dropdown.options[dropdown.selectedIndex].id !== 'TICKET' && document.getElementById('subDivId' + idIndex) !== null) {
            document.getElementById('subDivId' + idIndex).remove();
        }
        // set auto select in positive notes.
        // fnLockDiv(idIndex);
        for (var j = 0; j < divIdsArray.length; j++) {
            var divContent = divIdsArray[j];
            //var inputvalue = inputValues[j].value;
            var test = localStorage.getItem(divContent);
            document.getElementById(divIdsArray[j]).value = test;
            //selectedValues.push(selectedDrps[j].value);
        }
    }
    // Added by Rahul Mistry on 24 June 2024.


    // Added by Rahul Mistry on 26 June 2024.
    function fnRaiseTicket(index) {
        var ticketRaiseEmailSubject = document.getElementById('selectedId' + index);
        var ticketRaiseEmailSubjectLabel = ticketRaiseEmailSubject.options[ticketRaiseEmailSubject.selectedIndex].label;
        var contactToName = document.getElementById('choices-multiple-remove-button-party');
        var contactToNameLabel = contactToName.options[contactToName.selectedIndex].label;
        var ticketRaiseMessage = "our party " + contactToNameLabel + " is " + ticketRaiseEmailSubjectLabel + " As soon as possible, Thank you.";

        document.getElementById('subjectLineForTicketRaise').value = ticketRaiseEmailSubjectLabel;
        document.getElementById('messageBoxForTicketRaise').value = ticketRaiseMessage
        $("#canvasRaiseTicket").show();//('hide');
    }

    function fnSendMailRaiseTicket() {

        let recipientToName = $('#recipientToNameForTicketRaise').val();
        //let recipientCcName = $('#recipientCcName').val();
        //let recipientBccName = $('#recipientBccName').val();
        let subjectLine = $('#subjectLineForTicketRaise').val();
        let messageBox = $('#messageBoxForTicketRaise').val();
        //messageBoxText.value = CKEDITOR.instances.editor.getData();

        let sendMailUrl = '@Url.Action("SendMail", "ConversationActivities")';
        //let sendMailUrlList = sendMailUrl + '?recipientToName=' + recipientToName + '&recipientCcName=' + recipientCcName + '&recipientBccName=' + recipientBccName + '&subjectLine=' + subjectLine + '&messageBox=' + messageBox;
        let sendMailUrlList = sendMailUrl + '?recipientToName=' + recipientToName + '&subjectLine=' + subjectLine + '&messageBox=' + messageBox;
        //window.location.href = sendMailUrlList;

        $.ajax({
            type: 'POST',
            url: sendMailUrlList,
            //data: modeldata,
            dataType: 'json',
            beforeSend: function () { },
            success: function (data) {
                if (data.status) {
                    //notification

                    Lobibox.notify('success', {
                        pauseDelayOnHover: true,
                        size: 'mini',
                        icon: 'bx bx-check-circle',
                        continueDelayOnInactiveTab: false,
                        position: 'bottom right',
                        msg: data.message
                    });
                    $('#canvasRaiseTicket').hide();
                    // $("#ModalMail").modal("hide");
                    window.location.reload().delay(10000);
                }
                else {
                    Lobibox.notify('error', {
                        pauseDelayOnHover: true,
                        size: 'mini',
                        icon: 'bx bx-check-circle',
                        continueDelayOnInactiveTab: false,
                        position: 'bottom right',
                        msg: data.message
                    });
                }
                //window.location.reload().delay(10000);
            },
            error: function (error) {
                laddaStop(l);
                Lobibox.notify('error', {
                    pauseDelayOnHover: true,
                    size: 'mini',
                    icon: 'bx bx-check-circle',
                    continueDelayOnInactiveTab: false,
                    position: 'bottom right',
                    msg: "@MessageHelper.Error"
                });
            }
        }).always(function () {
            hideLoader();
        });

    }
    // Added by Rahul Mistry on 26 June 2024.


    // Added by Rahul Mistry on 27 June 2024.

    function fnOpenSetReminder(index) {
        var ticketRaiseEmailSubject = document.getElementById('selectedId' + index);
        var ticketRaiseEmailSubjectLabel = ticketRaiseEmailSubject.options[ticketRaiseEmailSubject.selectedIndex].label;
        document.getElementById('reminderSubjectCommunication').value = ticketRaiseEmailSubjectLabel;
        document.getElementById('reminderDateCommunication').valueAsDate = new Date();

        var newDateTime = new Date();
        var hour = newDateTime.getHours();
        var minutes = newDateTime.getMinutes();
        var testCase = hour + ":" + minutes;
        debugger;
        document.getElementById('reminderTimeCommunication').value = hour + ":" + minutes;
        $('#canvasSetReminder').show();
    }


    function fnSetReminder() {
        const reminderDateCommunication = document.getElementById('reminderDateCommunication').value;
        const reminderTimeCommunication = document.getElementById('reminderTimeCommunication').value;
        const reminderSubjectCommunication = document.getElementById('reminderSubjectCommunication').value;
        const reminderTextCommunication = document.getElementById('reminderTextCommunication').value;

        // alert(`reminderDate ${reminderDate},reminderTime ${reminderTime}, reminderText ${reminderText}, reminderSubject ${reminderSubject} `);
        //let addReminderUrl = 'Url.Action("AddReminder","Notification")';
        //alert('addReminderUrl-- ' + addReminderUrl)
        let _parameters = { reminderDate: reminderDateCommunication, reminderTime: reminderTimeCommunication, reminderText: reminderTextCommunication, reminderSubject: reminderSubjectCommunication };

        $.ajax({
            type: 'POST',
            //url: addReminderUrl,
            url: '/Notification/AddReminder',
            data: _parameters,
            dataType: 'json',
            beforeSend: function () { },
            success: function (data) {
                if (data.status) {
                    //Remainder
                    Lobibox.notify('success', {
                        pauseDelayOnHover: true,
                        size: 'mini',
                        icon: 'bx bx-check-circle',
                        continueDelayOnInactiveTab: false,
                        position: 'bottom right',
                        msg: data.message
                    });
                    $('#canvasSetReminder').hide();
                    // window.location.reload().delay(5000);
                }
                else {
                    Lobibox.notify('error', {
                        pauseDelayOnHover: true,
                        size: 'mini',
                        icon: 'bx bx-check-circle',
                        continueDelayOnInactiveTab: false,
                        position: 'bottom right',
                        msg: data.message
                    });
                }
                //window.location.reload().delay(5000);
            },
            error: function (error) {
                laddaStop(l);
                Lobibox.notify('error', {
                    pauseDelayOnHover: true,
                    size: 'mini',
                    icon: 'bx bx-check-circle',
                    continueDelayOnInactiveTab: false,
                    position: 'bottom right',
                    msg: "@MessageHelper.Error"
                });
            }
        }).always(function () {
            hideLoader();
        });
    }


    const bookingDateInput = document.getElementById("reminderDateCommunication");
    const dateError = document.getElementById("date-error");

    function getTodayString() {
        const today = new Date();
        const year = today.getFullYear();
        const month = String(today.getMonth() + 1).padStart(2, '0');
        const day = String(today.getDate()).padStart(2, '0');
        return year + '-' + month + '-' + day;
    }

    bookingDateInput.addEventListener("input", function () {
        const enteredDate = bookingDateInput.value;
        const today = getTodayString();
        if (enteredDate < today) {
            dateError.style.color = 'red';
            dateError.textContent = "Please select today's date or a future date.";
            bookingDateInput.style.border = "1px solid"; // Optional: style the input for error
        } else {
            dateError.textContent = "";
            bookingDateInput.style.border = ""; // Optional: remove error style
        }
    });

    const meetingTimeInput = document.getElementById("reminderTimeCommunication");
    const timeError = document.getElementById("time-error");

    meetingTimeInput.addEventListener("input", function () {
        const enteredTime = meetingTimeInput.value;
        const today = new Date(); // Get today's date and time

        // Create a Date object with today's date and entered time
        const enteredDateTimeObj = new Date(today.getFullYear(), today.getMonth(), today.getDate(), enteredTime.split(':')[0], enteredTime.split(':')[1]);

        if (enteredDateTimeObj <= today) {
            timeError.style.color = 'red';
            timeError.textContent = "Please select a time after the current time.";
            meetingTimeInput.style.border = "1px solid"; // Optional: style the input for error
        } else {
            timeError.textContent = "";
            meetingTimeInput.style.border = ""; // Optional: remove error style
        }
    });
    // Added by Rahul Mistry on 27 June 2024.

</script>




