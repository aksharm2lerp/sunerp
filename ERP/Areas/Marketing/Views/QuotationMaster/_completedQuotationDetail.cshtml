@using Microsoft.AspNetCore.Identity
@using Business.SQL
@using GridCore
@using System.Data;
@addTagHelper *, GridMvc
@model ISGrid
@{

} 
@*     <div class="row card"  id="SearchPanelCompleted">
        @{
            Html.RenderPartial("_QuotationMasterSearch", new Business.Entities.Marketing.QuotationMasterModel.QuotationSearch());
        }
    </div> *@

<div class="row card" id="SearchPanelCompleted">
    <div class="mt-3">
        <div class="row">
            <div class="col-md-12">
                <div class="row">
                    <div class="col-md-6">
                        <div class="mb-3 row">
                            <div class="col-md-4">
                                <label for="Keyword" class="col-form-label">Search keyword</label>
                            </div>
                            <div class="col-md-8">
                                <input type="text" class="form-control" id="searchCompletedKeyword" maxlength="50" placeholder="----- Search By Input Value -------">
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6" style="">
                        <div class="text-end">
                            <button class="btn btn-primary btn-info px-5 ladda-button" type="button" onclick="fnSearchPendingORCompletedQuotations(false)">
                                Search
                            </button>
                        </div>
                    </div>
                </div>

            </div>
        </div>
    </div>
</div>

<div class="row" id="CompletedSearchResult">
    <div class="col-md-12">
        <grid model="@Model" />
    </div>
</div>
<div class="modal fade" id="approveQuotationModal" tabindex="-1099" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="exampleModalLabel">Approve quotation</h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body" id="qoutationApprovalBody">
                
                @* Ready to approve? *@
            </div>
            <div class="modal-footer">
                <a onclick="fnApprovQuotationPrint()" class="btn btn-primary">Print</a>
                <a onclick="fnApprovQuotation()" class="btn btn-primary">Submit</a>
                <!--<button type="button" class="btn btn-primary" onclick="fnAddParty()">Save</button>-->
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<!--Below code added by dravesh for canvas popup 29-05-2024-->
<div class="offcanvas offcanvas-bottom" tabindex="-1" id="canvasQuotationMasterStatus" aria-labelledby="offcanvasCompanyLabel" style="height: 60%; width: 60%; margin: 10% 20%;">
    <div class="offcanvas-header">
        <h5 class="offcanvas-title" id="canvasQuotationMasterStatusHeader">Approve quotation</h5>
        <button type="button" class="btn-close te  xt-reset" data-bs-dismiss="offcanvas" aria-l abel="Close"></button>
    </div>
    <div class="offcanvas-body pt-3 pb-5">
        <div id="dvInfoQuotationMasterStatus">
        </div>
    </div>
</div>
<!--Above code added by dravesh for canvas popup 29-05-2024-->

@await Html.PartialAsync("_ValidationScriptsPartial")
<script type="text/javascript">
    var urladd = '@Url.Action("Get", "QuotationMaster")';
    //int id, int requestforQuotid, bool isApproveRequest = false
    function fnOpenQuotationOverviewPopup(obj) {
        var _key = $(obj).data('key');
        var _id = $(obj).data('id');
        // if (_id > 0)
        //     document.getElementById("canvasHeaderQuotationMaster").innerHTML = "Update Quotation Master";
        // else
        //     document.getElementById("canvasHeaderQuotationMaster").innerHTML = "Add Quotation Master";
        var _parameters = { id: _id, requestforQuotid: _key, isApproveRequest: true };
        $.ajax({
            url: urladd,
            type: "POST",
            data: _parameters,
            success: function (data, textStatus, jqXHR) {
                // $('#dvInfoQuotationMaster').html(data);
                // $("#approveQuotationModal").show();//('hide');
                $('#qoutationApprovalBody').html(data);
                $('#approveQuotationModal').modal('show');
            }
        });
    }
    function fnApprovQuotationPrint() {
        //alert('fnPrintSalary fn invoked.');
        let _id = document.getElementById('QuotationID').value;
        // let _month = $(obj).data('month');
        // let _year = $(obj).data('year');
        // let _company = $(obj).data('company');
        // let _category = $(obj).data('category');
        //let _empId = $(obj).data('key');

        var currentUrl = window.location.href;
        // debugger;
        //const index = currentUrl.indexOf('?');
        //alert("&QuotationID=" + _id);
        var Para = "&QuotationID=" + _id;
        var url = "http://sun260880-001-site2.atempurl.com/default.aspx?reportkey=7" + Para;
        window.open(url, "Report Platform", "toolbar=0, location=0, directories=0, status=, menubar=0, scrollbars=yes, resizable=yes, copyhistory=yes, width=900, height=1200");

    }

    function fnApprovQuotation() {
        var urlsave = '@Url.Action("AddOrUpdateQuotationApproval", "QuotationMaster")';
        modeldata = $("#quotationReviewForm").serialize();
        $.ajax({
            type: 'POST',
            url: urlsave,
            data: modeldata,
            dataType: 'json',
            success: function (data) {
                if (data.status) {
                    $('#canvasQuotationMasterStatus').hide();
                    // window.location.reload();
                    Lobibox.notify('success', {
                        pauseDelayOnHover: true,
                        size: 'mini',
                        icon: 'bx bx-check-circle',
                        continueDelayOnInactiveTab: false,
                        position: 'bottom right',
                        msg: data.message
                    });
                    window.location.reload();
                }
                else {
                    Lobibox.notify('error', {
                        pauseDelayOnHover: true,
                        size: 'mini',
                        icon: 'bx bx-check-circle',
                        continueDelayOnInactiveTab: false,
                        position: 'bottom right',
                        msg: data.message
                    });
                }
            },
            error: function (error) {
                laddaStop(l);
                Lobibox.notify('error', {
                    pauseDelayOnHover: true,
                    size: 'mini',
                    icon: 'bx bx-check-circle',
                    continueDelayOnInactiveTab: false,
                    position: 'bottom right',
                    msg: "@MessageHelper.Error"
                });
            }
        }).always(function () {
            hideLoader();
        });
    }

    //Below code added by dravesh for canvas popup 29-05-2024
    function fnQuotationMasterStatus(obj) {
        var _key = $(obj).data('key');
        var _id = $(obj).data('id');
        var _parameters = { id: _id, requestforQuotid: _key, isApproveRequest: true };
        $.ajax({
            url: urladd,
            type: "GET",
            data: _parameters,
            success: function (data, textStatus, jqXHR) {
                $("#canvasQuotationMasterStatus").show();//('hide');
                $('#dvInfoQuotationMasterStatus').html(data);
            },
            error: function (error) {
                //debugger;
            }
        });
    }
    //Above code added by dravesh for canvas popup 29-05-2024
</script>