#pragma checksum "D:\GitHub\SUN\sunerpm2l\ERP\Views\Shared\_notification.cshtml" "{8829d00f-11b8-4213-878b-770e8597ac16}" "308f23065896838ed85df020ed3a172e09625308dfd80e8f45c4b64093a91254"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Shared__notification), @"mvc.1.0.view", @"/Views/Shared/_notification.cshtml")]
namespace AspNetCore
{
    #line hidden
    using global::System;
    using global::System.Collections.Generic;
    using global::System.Linq;
    using global::System.Threading.Tasks;
    using global::Microsoft.AspNetCore.Mvc;
    using global::Microsoft.AspNetCore.Mvc.Rendering;
    using global::Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "D:\GitHub\SUN\sunerpm2l\ERP\Views\_ViewImports.cshtml"
using ERP;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\GitHub\SUN\sunerpm2l\ERP\Views\_ViewImports.cshtml"
using ERP.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "D:\GitHub\SUN\sunerpm2l\ERP\Views\_ViewImports.cshtml"
using Business.Entities;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "D:\GitHub\SUN\sunerpm2l\ERP\Views\_ViewImports.cshtml"
using Microsoft.AspNetCore.Identity;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "D:\GitHub\SUN\sunerpm2l\ERP\Views\_ViewImports.cshtml"
using Business.SQL;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "D:\GitHub\SUN\sunerpm2l\ERP\Views\_ViewImports.cshtml"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "D:\GitHub\SUN\sunerpm2l\ERP\Views\_ViewImports.cshtml"
using ERP.Enums;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "D:\GitHub\SUN\sunerpm2l\ERP\Views\_ViewImports.cshtml"
using ERP.Extensions;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "D:\GitHub\SUN\sunerpm2l\ERP\Views\_ViewImports.cshtml"
using ERP.Helpers;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "D:\GitHub\SUN\sunerpm2l\ERP\Views\_ViewImports.cshtml"
using Business.Entities.Dynamic;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA256", @"308f23065896838ed85df020ed3a172e09625308dfd80e8f45c4b64093a91254", @"/Views/Shared/_notification.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA256", @"9af2a5bd844c76fa2170a48777822dbd4537e1a6e69a69cabcf43956cc6762c3", @"/Views/_ViewImports.cshtml")]
    #nullable restore
    public class Views_Shared__notification : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    #nullable disable
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral(@"<a class=""nav-link dropdown-toggle dropdown-toggle-nocaret position-relative"" href=""#"" role=""button"" data-bs-toggle=""dropdown"" aria-expanded=""false"">
    <div onclick=""fnOpenNotificationDRP()"">
        <span class=""alert-count"" id=""alertCount""></span>
        <i class='bx bx-bell'></i>
    </div>
</a>
<div class=""dropdown-menu dropdown-menu-end"">
    <a>
        <div class=""msg-header"">
            <p class=""msg-header-title"">Notifications</p>
            <p type=""button"" class=""msg-header-clear ms-auto"" id=""viewAllNotification"" onclick=""fnViewAllNotification()"">Marks all as read</p>
        </div>
    </a>
    <div class=""header-notifications-list"">

        <div id=""notificationLists"">
");
            WriteLiteral("        </div>\r\n\r\n");
            WriteLiteral("    </div>\r\n    <a href=\"javascript:;\" onclick=\"fnViewAllNotificationPage()\">\r\n        <div class=\"text-center msg-footer\">View All Notifications</div>\r\n    </a>\r\n");
            WriteLiteral("</div>\r\n\r\n<script type=\"text/javascript\">\r\n    var urlGetNotification = \'");
#nullable restore
#line 176 "D:\GitHub\SUN\sunerpm2l\ERP\Views\Shared\_notification.cshtml"
                         Write(Url.Action("GetNotificationCount", "Notification"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"';
    $(function () {
        // Call the updateNotificationCount function every 3 seconds
        setInterval(function () {
            //alert('GetNotificationCount ajax invoked ""urlGetNotification"" - ' + urlGetNotification);
            // code to be executed
            $.ajax({
                url: urlGetNotification,
                type: 'GET',
                dataType: 'json',
                success: function (data, textStatus, jqXHR) {
                    //console.log('Data--'+data)
                    //alert('data--' + data);
                    let count = data.count.length;
                    //debugger;
                    //var count = data.count;
                    if (count > 0) {
                        $('#alertCount').text(count);
                    }
                    else {
                        $('#alertCount').text('');
                        $('#alertCount').removeClass('alert-count');
                        //class=""alert-count""
                    ");
            WriteLiteral(@"}
                    // Get the element with the class you want to disable
                    var element = document.getElementById('alert-count');

                    // Disable the class by adding a disabled class
                    element.classList.add('disabled');

                    //// Create an Audio object with the path to your sound file
                    //var notificationSound = new Audio('C:/Users/Lenovo/Documents/GitHub/aksharm2l/ERP/wwwroot/audio/notification/Simple-notification.mp3');

                    //// Call the play() method when you want to play the sound
                    //notificationSound.play();

                    //notificationSound.addEventListener('error', function () {
                    //    alert('Notification sound not paly');
                    //    // Code to be executed if there is an error playing the sound
                    //});
                }
            });
        }, 2000);
    });

    var urlViewAllNotification = '");
#nullable restore
#line 221 "D:\GitHub\SUN\sunerpm2l\ERP\Views\Shared\_notification.cshtml"
                             Write(Url.Action("ViewAllNotification","Notification"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"';
    function fnViewAllNotification() {

        var l = laddaStart('viewAllNotification');
        console.log('l-- ' + l);
        modeldata = $(""#viewAllNotification"").serialize();
        //alert(""urlViewAllNotification---"" + urlViewAllNotification);
        $.ajax({
            url: urlViewAllNotification,
            type: 'POST',
            dataType: 'json',
            data: modeldata,
            beforeSend: function () { },
            success: function (data) {
                if (data.status) {
                    //alert('Viewed All Notification');
                    //notification
                    //$(""#canvas_masterentity2"").hide();//('hide');
                    //Lobibox.notify('success', {
                    //    pauseDelayOnHover: true,
                    //    size: 'mini',
                    //    icon: 'bx bx-check-circle',
                    //    continueDelayOnInactiveTab: false,
                    //    position: 'bottom right',
                  ");
            WriteLiteral(@"  //    msg: data.message
                    //});
                }
                else {
                    //alert('error - 1');
                    Lobibox.notify('error', {
                        pauseDelayOnHover: true,
                        size: 'mini',
                        icon: 'bx bx-check-circle',
                        continueDelayOnInactiveTab: false,
                        position: 'bottom right',
                        msg: data.message
                    });
                }
            },
            error: function (error) {
                //alert('error - 2');
                laddaStop(l);
                Lobibox.notify('error', {
                    pauseDelayOnHover: true,
                    size: 'mini',
                    icon: 'bx bx-check-circle',
                    continueDelayOnInactiveTab: false,
                    position: 'bottom right',
                    msg: """);
#nullable restore
#line 269 "D:\GitHub\SUN\sunerpm2l\ERP\Views\Shared\_notification.cshtml"
                     Write(MessageHelper.Error);

#line default
#line hidden
#nullable disable
            WriteLiteral("\"\r\n                });\r\n            }\r\n        }).always(function () {\r\n            hideLoader();\r\n        });\r\n\r\n    };\r\n\r\n    var urlViewOneNotificationOnly = \'");
#nullable restore
#line 278 "D:\GitHub\SUN\sunerpm2l\ERP\Views\Shared\_notification.cshtml"
                                 Write(Url.Action("ViewOneNotificationOnly","Notification"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"';
    function fnViewOneNotificationOnly(NotificationID) {
        var _id = NotificationID;
        var _parameters = { notificationID: _id };
        $.ajax({
            url: urlViewOneNotificationOnly,
            type: 'POST',
            dataType: 'json',
            data: _parameters,
            beforeSend: function () { },
            success: function (data) {
                if (data.status) {
                    //alert('Viewed One Notification Only');
                    //notification
                    //$(""#canvas_masterentity2"").hide();//('hide');
                    //Lobibox.notify('success', {
                    //    pauseDelayOnHover: true,
                    //    size: 'mini',
                    //    icon: 'bx bx-check-circle',
                    //    continueDelayOnInactiveTab: false,
                    //    position: 'bottom right',
                    //    msg: data.message
                    //});
                }
                else {
       ");
            WriteLiteral(@"             //alert('error - 1');
                    Lobibox.notify('error', {
                        pauseDelayOnHover: true,
                        size: 'mini',
                        icon: 'bx bx-check-circle',
                        continueDelayOnInactiveTab: false,
                        position: 'bottom right',
                        msg: data.message
                    });
                }
            },
            error: function (error) {
                //alert('error - 2');
                laddaStop(l);
                Lobibox.notify('error', {
                    pauseDelayOnHover: true,
                    size: 'mini',
                    icon: 'bx bx-check-circle',
                    continueDelayOnInactiveTab: false,
                    position: 'bottom right',
                    msg: """);
#nullable restore
#line 323 "D:\GitHub\SUN\sunerpm2l\ERP\Views\Shared\_notification.cshtml"
                     Write(MessageHelper.Error);

#line default
#line hidden
#nullable disable
            WriteLiteral(@"""
                });
            }
        }).always(function () {
            hideLoader();
        });

    };

    //var urlViewAllNotificationPage = 'Url.Action(""ViewAllNotificationList"",""Notification"")';
    function fnViewAllNotificationPage() {
        //modeldata = $(""#viewAllNotification"").serialize();
        //alert('fnViewAllNotificationPage Hit - ');
        window.location.href = ""/Notification/ViewAllNotificationList"";

        //$.ajax({
        //    url: urlViewAllNotificationPage,
        //    type: 'POST',
        //    dataType: 'json',
        //    data: modeldata,
        //    beforeSend: function () { },
        //    success: function (data) {
        //        if (data.status) {
        //            //alert('Viewed One Notification Only');
        //            //notification
        //            //$(""#canvas_masterentity2"").hide();//('hide');
        //            //Lobibox.notify('success', {
        //            //    pauseDelayOnHover: true,
   ");
            WriteLiteral(@"     //            //    size: 'mini',
        //            //    icon: 'bx bx-check-circle',
        //            //    continueDelayOnInactiveTab: false,
        //            //    position: 'bottom right',
        //            //    msg: data.message
        //            //});
        //        }
        //        else {
        //            //alert('error - 1');
        //            Lobibox.notify('error', {
        //                pauseDelayOnHover: true,
        //                size: 'mini',
        //                icon: 'bx bx-check-circle',
        //                continueDelayOnInactiveTab: false,
        //                position: 'bottom right',
        //                msg: data.message
        //            });
        //        }
        //    },
        //    error: function (error) {
        //        //alert('error - 2');
        //        laddaStop(l);
        //        Lobibox.notify('error', {
        //            pauseDelayOnHover: true,
        /");
            WriteLiteral("/            size: \'mini\',\r\n        //            icon: \'bx bx-check-circle\',\r\n        //            continueDelayOnInactiveTab: false,\r\n        //            position: \'bottom right\',\r\n        //            msg: \"");
#nullable restore
#line 379 "D:\GitHub\SUN\sunerpm2l\ERP\Views\Shared\_notification.cshtml"
                       Write(MessageHelper.Error);

#line default
#line hidden
#nullable disable
            WriteLiteral("\"\r\n        //        });\r\n        //    }\r\n        //}).always(function () {\r\n        //    hideLoader();\r\n        //});\r\n    };\r\n\r\n</script>");
        }
        #pragma warning restore 1998
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public IAuthorizationService AuthorizationService { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; } = default!;
        #nullable disable
    }
}
#pragma warning restore 1591
