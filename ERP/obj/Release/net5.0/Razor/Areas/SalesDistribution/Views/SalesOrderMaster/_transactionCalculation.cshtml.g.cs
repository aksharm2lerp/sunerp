#pragma checksum "D:\GitHub\SUN\sunerpm2l\ERP\Areas\SalesDistribution\Views\SalesOrderMaster\_transactionCalculation.cshtml" "{8829d00f-11b8-4213-878b-770e8597ac16}" "234eb39a62a47cf0685534bcb7bcbdc9a3c639da848e99d1a9b8a6b181fe6bd7"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Areas_SalesDistribution_Views_SalesOrderMaster__transactionCalculation), @"mvc.1.0.view", @"/Areas/SalesDistribution/Views/SalesOrderMaster/_transactionCalculation.cshtml")]
namespace AspNetCore
{
    #line default
    using global::System;
    using global::System.Collections.Generic;
    using global::System.Linq;
    using global::System.Threading.Tasks;
    using global::Microsoft.AspNetCore.Mvc;
    using global::Microsoft.AspNetCore.Mvc.Rendering;
    using global::Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "D:\GitHub\SUN\sunerpm2l\ERP\Areas\SalesDistribution\_ViewImports.cshtml"
using ERP

#nullable disable
    ;
#nullable restore
#line 2 "D:\GitHub\SUN\sunerpm2l\ERP\Areas\SalesDistribution\_ViewImports.cshtml"
using ERP.Models

#nullable disable
    ;
#nullable restore
#line 3 "D:\GitHub\SUN\sunerpm2l\ERP\Areas\SalesDistribution\_ViewImports.cshtml"
using Business.Entities

#nullable disable
    ;
#nullable restore
#line 4 "D:\GitHub\SUN\sunerpm2l\ERP\Areas\SalesDistribution\_ViewImports.cshtml"
using Microsoft.AspNetCore.Identity

#nullable disable
    ;
#nullable restore
#line 5 "D:\GitHub\SUN\sunerpm2l\ERP\Areas\SalesDistribution\_ViewImports.cshtml"
using Business.SQL

#nullable disable
    ;
#nullable restore
#line 6 "D:\GitHub\SUN\sunerpm2l\ERP\Areas\SalesDistribution\_ViewImports.cshtml"
using Microsoft.AspNetCore.Authorization

#nullable disable
    ;
#nullable restore
#line 7 "D:\GitHub\SUN\sunerpm2l\ERP\Areas\SalesDistribution\_ViewImports.cshtml"
using ERP.Enums

#nullable disable
    ;
#nullable restore
#line 8 "D:\GitHub\SUN\sunerpm2l\ERP\Areas\SalesDistribution\_ViewImports.cshtml"
using ERP.Extensions

#nullable disable
    ;
#nullable restore
#line 9 "D:\GitHub\SUN\sunerpm2l\ERP\Areas\SalesDistribution\_ViewImports.cshtml"
using ERP.Helpers

#nullable disable
    ;
#nullable restore
#line 10 "D:\GitHub\SUN\sunerpm2l\ERP\Areas\SalesDistribution\_ViewImports.cshtml"
using Business.Entities.Dynamic

#nullable disable
    ;
#nullable restore
#line 1 "D:\GitHub\SUN\sunerpm2l\ERP\Areas\SalesDistribution\Views\SalesOrderMaster\_transactionCalculation.cshtml"
 using System.Data;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"Sha256", @"234eb39a62a47cf0685534bcb7bcbdc9a3c639da848e99d1a9b8a6b181fe6bd7", @"/Areas/SalesDistribution/Views/SalesOrderMaster/_transactionCalculation.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"Sha256", @"66ca4ed4d968d0cb63ad96b0820d0f1f680273fdde74e92383c120d6a96a5604", @"/Areas/SalesDistribution/_ViewImports.cshtml")]
    #nullable restore
    public class Areas_SalesDistribution_Views_SalesOrderMaster__transactionCalculation : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<System.Data.DataTable>
    #nullable disable
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 3 "D:\GitHub\SUN\sunerpm2l\ERP\Areas\SalesDistribution\Views\SalesOrderMaster\_transactionCalculation.cshtml"
  
    DataTable dataTable = Model;
    string dataTableIntoJson = Newtonsoft.Json.JsonConvert.SerializeObject(Model).ToString();
    string testrt = dataTableIntoJson;

#line default
#line hidden
#nullable disable

            WriteLiteral("\r\n");
#nullable restore
#line 24 "D:\GitHub\SUN\sunerpm2l\ERP\Areas\SalesDistribution\Views\SalesOrderMaster\_transactionCalculation.cshtml"
 if (Model != null && Model.Rows.Count > 0)
{
    int i = 0;
    foreach (DataRow item in Model.Rows)
    {
        decimal percentageValue = 0;
        string percentageValueStr = Convert.ToString(item[6]);
        if (!string.IsNullOrEmpty(percentageValueStr))
        { percentageValue = Convert.ToDecimal(percentageValueStr); }

#line default
#line hidden
#nullable disable

            WriteLiteral("        <div class=\"col-sm-8 col-md-8 col-lg-8\">\r\n            <div class=\"row mb-3\">\r\n            </div>\r\n        </div>\r\n        <div class=\" col-sm-4 col-md-4 col-lg-4\">\r\n            <div class=\"row mb-3\">\r\n                <label");
            BeginWriteAttribute("for", " for=\"", 1353, "\"", 1359, 0);
            EndWriteAttribute();
            WriteLiteral(" class=\"col-sm-3 col-form-label\">");
            Write(
#nullable restore
#line 39 "D:\GitHub\SUN\sunerpm2l\ERP\Areas\SalesDistribution\Views\SalesOrderMaster\_transactionCalculation.cshtml"
                                                               Convert.ToString(item[3])

#line default
#line hidden
#nullable disable
            );
            WriteLiteral("</label>\r\n                <div class=\"col-sm-2\">\r\n");
#nullable restore
#line 41 "D:\GitHub\SUN\sunerpm2l\ERP\Areas\SalesDistribution\Views\SalesOrderMaster\_transactionCalculation.cshtml"
                     if (percentageValue > 0)
                    {
                        string controlId = "perId" + Convert.ToString(item[0]);

#line default
#line hidden
#nullable disable

            WriteLiteral("                        <input type=\"text\" class=\"form-control\"");
            BeginWriteAttribute("id", " id=\"", 1683, "\"", 1714, 1);
            WriteAttributeValue("", 1688, 
#nullable restore
#line 44 "D:\GitHub\SUN\sunerpm2l\ERP\Areas\SalesDistribution\Views\SalesOrderMaster\_transactionCalculation.cshtml"
                                                                     Convert.ToString(item[0])

#line default
#line hidden
#nullable disable
            , 1688, 26, false);
            EndWriteAttribute();
            BeginWriteAttribute("value", " value=\"", 1715, "\"", 1739, 1);
            WriteAttributeValue("", 1723, 
#nullable restore
#line 44 "D:\GitHub\SUN\sunerpm2l\ERP\Areas\SalesDistribution\Views\SalesOrderMaster\_transactionCalculation.cshtml"
                                                                                                        percentageValue

#line default
#line hidden
#nullable disable
            , 1723, 16, false);
            EndWriteAttribute();
            WriteLiteral(" oninput=\"fnCalculateTaxesAmounts(this,true)\">\r\n");
#nullable restore
#line 45 "D:\GitHub\SUN\sunerpm2l\ERP\Areas\SalesDistribution\Views\SalesOrderMaster\_transactionCalculation.cshtml"
                    }
                    else
                    {

#line default
#line hidden
#nullable disable

            WriteLiteral("                        <input type=\"hidden\"");
            BeginWriteAttribute("value", " value=\"", 1904, "\"", 1943, 1);
            WriteAttributeValue("", 1912, 
#nullable restore
#line 48 "D:\GitHub\SUN\sunerpm2l\ERP\Areas\SalesDistribution\Views\SalesOrderMaster\_transactionCalculation.cshtml"
                                                     Convert.ToString(item[6] ?? 0)

#line default
#line hidden
#nullable disable
            , 1912, 31, false);
            EndWriteAttribute();
            WriteLiteral(" />\r\n");
#nullable restore
#line 49 "D:\GitHub\SUN\sunerpm2l\ERP\Areas\SalesDistribution\Views\SalesOrderMaster\_transactionCalculation.cshtml"
                    }

#line default
#line hidden
#nullable disable

            WriteLiteral("                </div>\r\n                <div class=\"col-sm-7\">\r\n                    <input type=\"hidden\"");
            BeginWriteAttribute("value", " value=\"", 2076, "\"", 2110, 1);
            WriteAttributeValue("", 2084, 
#nullable restore
#line 52 "D:\GitHub\SUN\sunerpm2l\ERP\Areas\SalesDistribution\Views\SalesOrderMaster\_transactionCalculation.cshtml"
                                                 Convert.ToString(item[3])

#line default
#line hidden
#nullable disable
            , 2084, 26, false);
            EndWriteAttribute();
            WriteLiteral(" />\r\n                    <input type=\"hidden\"");
            BeginWriteAttribute("value", " value=\"", 2156, "\"", 2190, 1);
            WriteAttributeValue("", 2164, 
#nullable restore
#line 53 "D:\GitHub\SUN\sunerpm2l\ERP\Areas\SalesDistribution\Views\SalesOrderMaster\_transactionCalculation.cshtml"
                                                 Convert.ToString(item[4])

#line default
#line hidden
#nullable disable
            , 2164, 26, false);
            EndWriteAttribute();
            WriteLiteral(" />\r\n                    <input type=\"text\" class=\"form-control\"");
            BeginWriteAttribute("id", " id=\"", 2255, "\"", 2286, 1);
            WriteAttributeValue("", 2260, 
#nullable restore
#line 54 "D:\GitHub\SUN\sunerpm2l\ERP\Areas\SalesDistribution\Views\SalesOrderMaster\_transactionCalculation.cshtml"
                                                                 Convert.ToString(item[4])

#line default
#line hidden
#nullable disable
            , 2260, 26, false);
            EndWriteAttribute();
            BeginWriteAttribute("placeholder", " placeholder=\"", 2287, "\"", 2327, 1);
            WriteAttributeValue("", 2301, 
#nullable restore
#line 54 "D:\GitHub\SUN\sunerpm2l\ERP\Areas\SalesDistribution\Views\SalesOrderMaster\_transactionCalculation.cshtml"
                                                                                                          Convert.ToString(item[3])

#line default
#line hidden
#nullable disable
            , 2301, 26, false);
            EndWriteAttribute();
            WriteLiteral(" oninput=\"fnCalculateTaxesAmounts()\">\r\n                    <input type=\"hidden\"");
            BeginWriteAttribute("value", " value=\"", 2407, "\"", 2441, 1);
            WriteAttributeValue("", 2415, 
#nullable restore
#line 55 "D:\GitHub\SUN\sunerpm2l\ERP\Areas\SalesDistribution\Views\SalesOrderMaster\_transactionCalculation.cshtml"
                                                 Convert.ToString(item[5])

#line default
#line hidden
#nullable disable
            , 2415, 26, false);
            EndWriteAttribute();
            WriteLiteral(" />\r\n                </div>\r\n            </div>\r\n        </div>\r\n");
#nullable restore
#line 59 "D:\GitHub\SUN\sunerpm2l\ERP\Areas\SalesDistribution\Views\SalesOrderMaster\_transactionCalculation.cshtml"
        i++;
    }
}

#line default
#line hidden
#nullable disable

            WriteLiteral(@"
<!--else
{
    <div class=""col-sm-8 col-md-8 col-lg-8"">
        <div class=""row mb-3"">
        </div>
    </div>
    <div class="" col-sm-4 col-md-4 col-lg-4"">
        <div class=""row mb-3"">
            <label for="""" class=""col-sm-5 col-form-label"">Net Amount</label>
            <div class=""col-sm-7"">
                <input type=""text"" class=""form-control"" placeholder=""Net Amount"" id=""NetAmountSource"" readonly>
            </div>
        </div>
    </div>
    <div class=""col-sm-7 col-md-7 col-lg-7"">
        <div class=""row mb-3"">
        </div>
    </div>
    <div class="" col-sm-5 col-md-5 col-lg-5"">
        <div class=""row mb-3"">
            <label for="""" class=""col-sm-3 col-form-label"">Discount Amt</label>
            <div class=""col-sm-2"">
                <input type=""text"" class=""form-control"" id=""DiscountAmtSource"" oninput=""fnUpdateTaxAmt()"">
            </div>
            <div class=""col-sm-7"">
                <input type=""text"" class=""form-control"" id=""DiscountAmtSource"" place");
            WriteLiteral(@"holder=""Discount Amount"" oninput=""fnUpdateTaxAmt()"">
            </div>
        </div>
    </div>
    <div class=""col-sm-7 col-md-7 col-lg-7"">
        <div class=""row mb-3"">
        </div>
    </div>
    <div class="" col-sm-5 col-md-5 col-lg-5"">
        <div class=""row"">
            <label for="""" class=""col-sm-3 col-form-label"">GST(%)</label>
            <div class=""col-sm-2"">
                <input type=""text"" class=""form-control"" id=""GSTPerSource"" oninput=""fnUpdateTaxAmt()"">
            </div>
            <div class=""col-sm-7"">
                <input type=""text"" class=""form-control"" id=""GSTAmtSource"" placeholder=""GST Amount"" oninput=""fnUpdateTaxAmt()"">
            </div>
        </div>
    </div>
    <div class=""col-sm-8 col-md-8 col-lg-8"">
        <div class=""row mb-3"">
        </div>
    </div>
    <div class="" col-sm-4 col-md-4 col-lg-4"">
        <div class=""row mb-3"">
            <label for="""" class=""col-sm-5 col-form-label"">Gross Amount</label>
            <div class=""col-sm-7");
            WriteLiteral(@""">
                <input type=""text"" class=""form-control"" placeholder=""Gross Amount"" id=""GrossAmountSource"" readonly>
            </div>
        </div>
    </div>
}-->
<!--div class=""row"">
    <div class=""col-sm-7 col-md-7 col-lg-7"">
        <div class=""row mb-3"">
        </div>
    </div>
    <div class="" col-sm-5 col-md-5 col-lg-5"">
        <div class=""row mb-3"">
            <label for="""" class=""col-sm-3 col-form-label"">Freight tax(%)</label>
            <div class=""col-sm-2"">
                <input type=""text"" class=""form-control"" id=""FreightPercentageSource"" oninput=""fnUpdateTaxAmt()"">
            </div>
            <div class=""col-sm-7"">
                <input type=""text"" class=""form-control"" id=""FreightAmountSource"" placeholder=""Freight Amount"" oninput=""fnUpdateTaxAmt()"">
            </div>
        </div>
    </div>
</div>
<div class=""row"">
    <div class=""col-sm-7 col-md-7 col-lg-7"">
        <div class=""row mb-3"">
        </div>
    </div>
    <div class="" col-sm-5 col-md-5");
            WriteLiteral(@" col-lg-5"">
        <div class=""row"">
            <label for="""" class=""col-sm-3 col-form-label"">Packing charges(%)</label>
            <div class=""col-sm-2"">
                <input type=""text"" class=""form-control"" id=""PackingChargesPerSource"" oninput=""fnUpdateTaxAmt()"">
            </div>
            <div class=""col-sm-7"">
                <input type=""text"" class=""form-control"" id=""PackingAmountSource"" placeholder=""Packing Amount"" oninput=""fnUpdateTaxAmt()"">
            </div>
        </div>
    </div>
</div>
<div class=""row"">
    <div class=""col-sm-8 col-md-8 col-lg-8"">
        <div class=""row mb-3"">
        </div>
    </div>
    <div class="" col-sm-4 col-md-4 col-lg-4"">
        <div class=""row mb-3"">
            <label for="""" class=""col-sm-5 col-form-label"">Gross Amount</label>
            <div class=""col-sm-7"">
                <input type=""text"" class=""form-control"" placeholder=""Gross Amount"" id=""GrossAmountSource"" readonly>
                </span>
            </div>
        </div>");
            WriteLiteral("\n    </div>\r\n</div>-->\r\n");
            Write(
#nullable restore
#line 169 "D:\GitHub\SUN\sunerpm2l\ERP\Areas\SalesDistribution\Views\SalesOrderMaster\_transactionCalculation.cshtml"
 await Html.PartialAsync("_ValidationScriptsPartial")

#line default
#line hidden
#nullable disable
            );
            WriteLiteral("\r\n\r\n\r\n<script type=\"text/javascript\">\r\n    fnUpdateNetAmount();\r\n    var jsonObjectOK = ");
            Write(
#nullable restore
#line 174 "D:\GitHub\SUN\sunerpm2l\ERP\Areas\SalesDistribution\Views\SalesOrderMaster\_transactionCalculation.cshtml"
                        Html.Raw(dataTableIntoJson)

#line default
#line hidden
#nullable disable
            );
            WriteLiteral(@";
    var filteredResult;
    $(document).ready(function () {
        fnCalculateTaxesAmounts();
    });

    function fnCalculateTaxesAmounts(inputEvent, isInputed) {
        var dataTableObject = jsonObjectOK;

        //let ctc = document.getElementById('CostToCompany').value;

        filteredResult = dataTableObject.filter((obj) => {
            return obj.Formula !== null && obj.Formula !== '';
        });
        if (isInputed) {
            let inputId = inputEvent.id;
            let inputValue = inputEvent.value;
            let selectedId = parseInt(inputId);
            for (let i = 0; i < filteredResult.length; i++) {
                if (filteredResult[i].FormulaID === selectedId) {
                    filteredResult[i].FormulaPercentage = parseInt(inputValue);
                }
            }
            jsonObjectOK = filteredResult;
        }

        let indexLength = Number(filteredResult.length - 1);
        if (filteredResult.length > 0) {
            $.each(filt");
            WriteLiteral(@"eredResult, function (i, k) {
                let formulaId = k.FormulaID;
                let test = k.Formula;
                let targetId = test.charAt(0);
                var slicedValues = test.slice(2);
                if (test !== null && test !== """") {
                    for (const strChar of slicedValues) {
                        var replaceValue = document.getElementById(strChar);
                        if (replaceValue) {
                            let repValue = replaceValue.value;
                            slicedValues = slicedValues.replace(strChar, repValue);
                        }
                        else {
                            //My Added
                            if (!replaceValue && slicedValues.includes('P') && strChar === 'P') {
                                //replace values with P.
                                var percValue = fnGetPercentageValuesAccordingToFormulaID(formulaId);
                                slicedValues = slicedValues.replac");
            WriteLiteral(@"e(strChar, percValue);
                            }
                            if (!replaceValue && slicedValues.includes('-' + strChar) && (strChar === '(' || strChar === ')')) {
                                // slicedValues = slicedValues.replace(strChar, 1);
                                continue;
                            }
                            //My Added
                            if (!replaceValue && slicedValues.includes('-' + strChar) && (strChar !== '0' && strChar !== '.')) {
                                slicedValues = slicedValues.replace(strChar, 0);
                            }
                            if (!replaceValue && slicedValues.includes('*' + strChar) && (strChar !== '0' && strChar !== '.')) {
                                slicedValues = slicedValues.replace(strChar, 1);
                            }
                        }
                    }
                }
                let calcValue = slicedValues;//.replace('D', 1).replace('I', 1);
   ");
            WriteLiteral(@"             let id = document.getElementById(targetId);
                var vals = eval(calcValue);
                if (id && vals) {
                    id.value = Number(parseFloat(vals.toFixed(2)));
                    if (indexLength === i) {
                        //document.getElementById('X').value = Number(parseFloat(vals.toFixed(0)));
                    }
                }
            });
        }
    }

    function fnGetPercentageValuesAccordingToFormulaID(formulaId) {
        filteredResult = jsonObjectOK.find((obj) => {
            return obj.FormulaID === formulaId;
        });
        return filteredResult.FormulaPercentage;
    }

    function fnUpdateNetAmount() {
        let netAmount = 0;
        var finalTable = document.getElementsByTagName('table');
        var rowLen = finalTable[0].rows.length;
        for (var i = 1; i < rowLen; i++) {
            let tester = parseFloat(finalTable[0].rows[i].cells[19].children[0].value).toFixed(2);
            netAmount =");
            WriteLiteral(@" Number(parseFloat(netAmount) + parseFloat(finalTable[0].rows[i].cells[19].children[0].value)).toFixed(2);
        }
        document.getElementById('A').value = netAmount;
        setTimeout(
            function () {
                //window.location.reload();
                fnCalculateTaxesAmounts();
            }, 2000);

    }
    //fnCalculateTaxesAmounts();

</script>");
        }
        #pragma warning restore 1998
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<System.Data.DataTable> Html { get; private set; } = default!;
        #nullable disable
    }
}
#pragma warning restore 1591
