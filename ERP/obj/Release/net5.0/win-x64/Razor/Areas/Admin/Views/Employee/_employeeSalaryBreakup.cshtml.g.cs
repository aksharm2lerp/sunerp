#pragma checksum "D:\GitHub\SUN\sunerpm2l\ERP\Areas\Admin\Views\Employee\_employeeSalaryBreakup.cshtml" "{8829d00f-11b8-4213-878b-770e8597ac16}" "0a1a63b4594407ff8cb5a1cb43f89d099422d27d7f3bfca5afad79217b1bfe30"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Areas_Admin_Views_Employee__employeeSalaryBreakup), @"mvc.1.0.view", @"/Areas/Admin/Views/Employee/_employeeSalaryBreakup.cshtml")]
namespace AspNetCore
{
    #line hidden
    using global::System;
    using global::System.Collections.Generic;
    using global::System.Linq;
    using global::System.Threading.Tasks;
    using global::Microsoft.AspNetCore.Mvc;
    using global::Microsoft.AspNetCore.Mvc.Rendering;
    using global::Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "D:\GitHub\SUN\sunerpm2l\ERP\Areas\Admin\_ViewImports.cshtml"
using ERP;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\GitHub\SUN\sunerpm2l\ERP\Areas\Admin\_ViewImports.cshtml"
using ERP.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "D:\GitHub\SUN\sunerpm2l\ERP\Areas\Admin\_ViewImports.cshtml"
using Business.Entities;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "D:\GitHub\SUN\sunerpm2l\ERP\Areas\Admin\_ViewImports.cshtml"
using Microsoft.AspNetCore.Identity;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "D:\GitHub\SUN\sunerpm2l\ERP\Areas\Admin\_ViewImports.cshtml"
using Business.SQL;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "D:\GitHub\SUN\sunerpm2l\ERP\Areas\Admin\_ViewImports.cshtml"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "D:\GitHub\SUN\sunerpm2l\ERP\Areas\Admin\_ViewImports.cshtml"
using ERP.Enums;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "D:\GitHub\SUN\sunerpm2l\ERP\Areas\Admin\_ViewImports.cshtml"
using ERP.Extensions;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "D:\GitHub\SUN\sunerpm2l\ERP\Areas\Admin\_ViewImports.cshtml"
using ERP.Helpers;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "D:\GitHub\SUN\sunerpm2l\ERP\Areas\Admin\_ViewImports.cshtml"
using Business.Entities.Dynamic;

#line default
#line hidden
#nullable disable
#nullable restore
#line 1 "D:\GitHub\SUN\sunerpm2l\ERP\Areas\Admin\Views\Employee\_employeeSalaryBreakup.cshtml"
using System.Data;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA256", @"0a1a63b4594407ff8cb5a1cb43f89d099422d27d7f3bfca5afad79217b1bfe30", @"/Areas/Admin/Views/Employee/_employeeSalaryBreakup.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA256", @"66ca4ed4d968d0cb63ad96b0820d0f1f680273fdde74e92383c120d6a96a5604", @"/Areas/Admin/_ViewImports.cshtml")]
    #nullable restore
    public class Areas_Admin_Views_Employee__employeeSalaryBreakup : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<System.Data.DataTable>
    #nullable disable
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("type", "hidden", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("employeeId"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("method", "post", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("formAddUpdateEmployeeSalaryBreakup"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("row needs-validation"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/admin/assets/vendors/typehead/jquery.typeahead.min.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_6 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("rel", new global::Microsoft.AspNetCore.Html.HtmlString("stylesheet"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_7 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/admin/assets/vendors/typehead/jquery.typeahead.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 4 "D:\GitHub\SUN\sunerpm2l\ERP\Areas\Admin\Views\Employee\_employeeSalaryBreakup.cshtml"
  
    var dataset = Model;
    string dataTable = string.Empty;
    //string jsCode = string.Empty;
    int? empId = ViewBag.EmployeeID;
    Dictionary<string, string> dynamicModel = new Dictionary<string, string>();

#line default
#line hidden
#nullable disable
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "0a1a63b4594407ff8cb5a1cb43f89d099422d27d7f3bfca5afad79217b1bfe308469", async() => {
                WriteLiteral("\r\n    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("input", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "0a1a63b4594407ff8cb5a1cb43f89d099422d27d7f3bfca5afad79217b1bfe308755", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper.InputTypeName = (string)__tagHelperAttribute_0.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
#nullable restore
#line 12 "D:\GitHub\SUN\sunerpm2l\ERP\Areas\Admin\Views\Employee\_employeeSalaryBreakup.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper.For = ModelExpressionProvider.CreateModelExpression(ViewData, __model => empId);

#line default
#line hidden
#nullable disable
                __tagHelperExecutionContext.AddTagHelperAttribute("asp-for", __Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper.For, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n");
                WriteLiteral(@"
    <!--
    <div class="" col-sm-12 col-md-6 col-lg-6 border border-dark"">

        <div class=""row mb-2"">
            <label for="""" class=""col-sm-3 col-form-label "">Gross Earnings (A):</label>
            <div class=""col-sm-9"">
                <input type=""text"" class=""form-control"" id=""GrossEarnings"" name=""GrossEarnings"" placeholder="""">
            </div>
        </div>

        <div class=""row mb-2"">
            <label for="""" class=""col-sm-3 col-form-label "">Net Salary Payable(A-B):</label>
            <div class=""col-sm-9"">
                <input type=""text"" class=""form-control"" id=""NetSalaryPayable"" name=""NetSalaryPayable"" placeholder="""">
            </div>
        </div>

    </div>
    <div class="" col-sm-12 col-md-6 col-lg-6 border border-dark"">

        <div class=""row mb-2"">
            <label for="""" class=""col-sm-3 col-form-label "">Gross Deductions (B):</label>
            <div class=""col-sm-9"">
                <input type=""text"" class=""form-control"" id=""GrossDeduction"" nam");
                WriteLiteral(@"e=""GrossDeduction"" placeholder="""">
            </div>
        </div>

        <div class=""row mb-2"">
            <label for="""" class=""col-sm-3 col-form-label "">Cost To Company (A+B):</label>
            <div class=""col-sm-9"">
                <input type=""text"" class=""form-control"" id=""CostToCompany"" name=""CostToCompany"" placeholder="""">
            </div>
        </div>

    </div>
    -->

    <div class="" col-sm-12 col-md-6 col-lg-6"">

        <div class=""row mb-3"">
            <b>
                <label");
                BeginWriteAttribute("for", " for=\"", 2112, "\"", 2118, 0);
                EndWriteAttribute();
                WriteLiteral(" class=\"col-sm-3 col-form-label \" color=\"blue\">Employee name:</label><label");
                BeginWriteAttribute("for", " for=\"", 2194, "\"", 2200, 0);
                EndWriteAttribute();
                WriteLiteral(" class=\"col-sm-8 col-form-label \" color=\"blue\">");
#nullable restore
#line 56 "D:\GitHub\SUN\sunerpm2l\ERP\Areas\Admin\Views\Employee\_employeeSalaryBreakup.cshtml"
                                                                                                                                                         Write(ViewBag.EmployeeName);

#line default
#line hidden
#nullable disable
                WriteLiteral("</label>\r\n            </b>\r\n        </div>\r\n\r\n    </div>\r\n\r\n    <div class=\"col-sm-12 col-md-6 col-lg-6\">\r\n\r\n        <div class=\"row mb-3\">\r\n            <b>\r\n                <label");
                BeginWriteAttribute("for", " for=\"", 2449, "\"", 2455, 0);
                EndWriteAttribute();
                WriteLiteral(" class=\"col-sm-3 col-form-label \" color=\"blue\">Employee code:</label><label");
                BeginWriteAttribute("for", " for=\"", 2531, "\"", 2537, 0);
                EndWriteAttribute();
                WriteLiteral(" class=\"col-sm-8 col-form-label \" color=\"blue\">");
#nullable restore
#line 66 "D:\GitHub\SUN\sunerpm2l\ERP\Areas\Admin\Views\Employee\_employeeSalaryBreakup.cshtml"
                                                                                                                                                         Write(ViewBag.EmployeeCode);

#line default
#line hidden
#nullable disable
                WriteLiteral("</label>\r\n            </b>\r\n        </div>\r\n\r\n    </div>\r\n\r\n    <div class=\" col-sm-12 col-md-6 col-lg-6 border border-dark\" id=\"divForEarnings\">\r\n\r\n        <div class=\"row mb-2\">\r\n            <b>\r\n                <label");
                BeginWriteAttribute("for", " for=\"", 2826, "\"", 2832, 0);
                EndWriteAttribute();
                WriteLiteral(" class=\"col-sm-3 col-form-label \" color=\"blue\">EARNINGS:</label>\r\n            </b>\r\n        </div>\r\n");
#nullable restore
#line 79 "D:\GitHub\SUN\sunerpm2l\ERP\Areas\Admin\Views\Employee\_employeeSalaryBreakup.cshtml"
          
            if (Model != null && Model.Rows.Count > 0)
            {
                dataTable = Newtonsoft.Json.JsonConvert.SerializeObject(Model).ToString();
                //jsCode = $"var jsonObject = JSON.parse('{dataTable}');";
                int i = 0;
                var columnName = Model.Columns["SalaryTypeID"].ToString();
                foreach (DataRow item in Model.Rows)
                {
                    /*int salaryTypeId = Convert.ToInt32(item[columnName]);
                    if (salaryTypeId == 1)
                    {
                    dynamicModel.Add(Convert.ToString(item[8]).Replace(" ", ""), Convert.ToString(item[12]));
                    <div class="row mb-1">
                    <div class="col-sm-3">
                    <label for="" class="col-form-label">@Convert.ToString(item[7])</label>
                    </div>
                    <div class="col-sm-1">
                    <label for="" class="col-form-label">(@Convert.ToString(item[8]).Replace(" ",""))</label>
                    </div>
                    <div class="col-sm-5">
                    <input type="text" class="form-control" id="@Convert.ToString(item[8]).Replace(" ","")" name="Basic"placeholder="@Convert.ToString(item[9])" value="@Convert.ToString(item[12])">
                    </div>
                    <div class="col-sm-3">
                    <label for="" class="col-form-label">@Convert.ToString(item[9])</label>
                    </div>
                    </div>
                    }*/

                    int salaryTypeId = Convert.ToInt32(item[columnName]);
                    if (salaryTypeId == 1)
                    {
                        string labelValue = Convert.ToString(item[12]);
                        string formulatext = Convert.ToString(item[9]);
                        string finalValue = (string.IsNullOrEmpty(labelValue) && string.IsNullOrEmpty(formulatext) && labelValue.Equals("") && formulatext.Equals("")) ? "0.00" : labelValue;


#line default
#line hidden
#nullable disable
                WriteLiteral("                        <div class=\"row mb-1\">\r\n                            <div class=\"col-sm-3\">\r\n                                <label");
                BeginWriteAttribute("for", " for=\"", 5118, "\"", 5124, 0);
                EndWriteAttribute();
                WriteLiteral(" class=\"col-form-label\">");
#nullable restore
#line 117 "D:\GitHub\SUN\sunerpm2l\ERP\Areas\Admin\Views\Employee\_employeeSalaryBreakup.cshtml"
                                                                Write(Convert.ToString(item[7]));

#line default
#line hidden
#nullable disable
                WriteLiteral("</label>\r\n                            </div>\r\n                            <div class=\"col-sm-1\">\r\n                                <label");
                BeginWriteAttribute("for", " for=\"", 5311, "\"", 5317, 0);
                EndWriteAttribute();
                WriteLiteral(" class=\"col-form-label\">(");
#nullable restore
#line 120 "D:\GitHub\SUN\sunerpm2l\ERP\Areas\Admin\Views\Employee\_employeeSalaryBreakup.cshtml"
                                                                 Write(Convert.ToString(item[8]).Replace(" ", ""));

#line default
#line hidden
#nullable disable
                WriteLiteral(")</label>\r\n                            </div>\r\n                            <div class=\"col-sm-5\">\r\n");
#nullable restore
#line 123 "D:\GitHub\SUN\sunerpm2l\ERP\Areas\Admin\Views\Employee\_employeeSalaryBreakup.cshtml"
                                  
                                    if (!string.IsNullOrEmpty(Convert.ToString(item[9])))
                                    {

#line default
#line hidden
#nullable disable
                WriteLiteral("                                        <input type=\"text\" class=\"form-control\"");
                BeginWriteAttribute("id", " id=\"", 5730, "\"", 5777, 1);
#nullable restore
#line 126 "D:\GitHub\SUN\sunerpm2l\ERP\Areas\Admin\Views\Employee\_employeeSalaryBreakup.cshtml"
WriteAttributeValue("", 5735, Convert.ToString(item[8]).Replace(" ",""), 5735, 42, false);

#line default
#line hidden
#nullable disable
                EndWriteAttribute();
                BeginWriteAttribute("placeholder", " placeholder=\"", 5778, "\"", 5818, 1);
#nullable restore
#line 126 "D:\GitHub\SUN\sunerpm2l\ERP\Areas\Admin\Views\Employee\_employeeSalaryBreakup.cshtml"
WriteAttributeValue("", 5792, Convert.ToString(item[9]), 5792, 26, false);

#line default
#line hidden
#nullable disable
                EndWriteAttribute();
                BeginWriteAttribute("value", " value=\"", 5819, "\"", 5838, 1);
#nullable restore
#line 126 "D:\GitHub\SUN\sunerpm2l\ERP\Areas\Admin\Views\Employee\_employeeSalaryBreakup.cshtml"
WriteAttributeValue("", 5827, finalValue, 5827, 11, false);

#line default
#line hidden
#nullable disable
                EndWriteAttribute();
                WriteLiteral(" readonly>\r\n");
#nullable restore
#line 127 "D:\GitHub\SUN\sunerpm2l\ERP\Areas\Admin\Views\Employee\_employeeSalaryBreakup.cshtml"
                                    }
                                    else
                                    {

#line default
#line hidden
#nullable disable
                WriteLiteral("                                        <input type=\"text\" class=\"form-control\"");
                BeginWriteAttribute("id", " id=\"", 6050, "\"", 6097, 1);
#nullable restore
#line 130 "D:\GitHub\SUN\sunerpm2l\ERP\Areas\Admin\Views\Employee\_employeeSalaryBreakup.cshtml"
WriteAttributeValue("", 6055, Convert.ToString(item[8]).Replace(" ",""), 6055, 42, false);

#line default
#line hidden
#nullable disable
                EndWriteAttribute();
                BeginWriteAttribute("placeholder", " placeholder=\"", 6098, "\"", 6138, 1);
#nullable restore
#line 130 "D:\GitHub\SUN\sunerpm2l\ERP\Areas\Admin\Views\Employee\_employeeSalaryBreakup.cshtml"
WriteAttributeValue("", 6112, Convert.ToString(item[9]), 6112, 26, false);

#line default
#line hidden
#nullable disable
                EndWriteAttribute();
                BeginWriteAttribute("value", " value=\"", 6139, "\"", 6158, 1);
#nullable restore
#line 130 "D:\GitHub\SUN\sunerpm2l\ERP\Areas\Admin\Views\Employee\_employeeSalaryBreakup.cshtml"
WriteAttributeValue("", 6147, finalValue, 6147, 11, false);

#line default
#line hidden
#nullable disable
                EndWriteAttribute();
                WriteLiteral(" oninput=\"fnCalculateSalary()\">\r\n");
#nullable restore
#line 131 "D:\GitHub\SUN\sunerpm2l\ERP\Areas\Admin\Views\Employee\_employeeSalaryBreakup.cshtml"
                                    }
                                

#line default
#line hidden
#nullable disable
                WriteLiteral("\r\n\r\n");
                WriteLiteral("\r\n                                <input type=\"hidden\"");
                BeginWriteAttribute("value", " value=\"", 6851, "\"", 6885, 1);
#nullable restore
#line 137 "D:\GitHub\SUN\sunerpm2l\ERP\Areas\Admin\Views\Employee\_employeeSalaryBreakup.cshtml"
WriteAttributeValue("", 6859, Convert.ToString(item[6]), 6859, 26, false);

#line default
#line hidden
#nullable disable
                EndWriteAttribute();
                WriteLiteral(">\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                                <label");
                BeginWriteAttribute("for", " for=\"", 7015, "\"", 7021, 0);
                EndWriteAttribute();
                WriteLiteral(" class=\"col-form-label\">");
#nullable restore
#line 140 "D:\GitHub\SUN\sunerpm2l\ERP\Areas\Admin\Views\Employee\_employeeSalaryBreakup.cshtml"
                                                                Write(Convert.ToString(item[9]));

#line default
#line hidden
#nullable disable
                WriteLiteral("</label>\r\n                            </div>\r\n                        </div>\r\n");
#nullable restore
#line 143 "D:\GitHub\SUN\sunerpm2l\ERP\Areas\Admin\Views\Employee\_employeeSalaryBreakup.cshtml"
                    }
                    i++;
                }
            }
        

#line default
#line hidden
#nullable disable
                WriteLiteral("\r\n    </div>\r\n\r\n    <div class=\" col-sm-12 col-md-6 col-lg-6 border border-dark\" id=\"divForDeductions\">\r\n\r\n");
                WriteLiteral("        <div class=\"row\">\r\n            <b>\r\n                <label");
                BeginWriteAttribute("for", " for=\"", 7709, "\"", 7715, 0);
                EndWriteAttribute();
                WriteLiteral(" class=\"col-sm-3 col-form-label \" color=\"blue\">DEDUCTIONS:</label>\r\n            </b>\r\n        </div>\r\n\r\n");
#nullable restore
#line 165 "D:\GitHub\SUN\sunerpm2l\ERP\Areas\Admin\Views\Employee\_employeeSalaryBreakup.cshtml"
          
            if (Model != null && Model.Rows.Count > 0)
            {
                int i = 0;
                var columnName = Model.Columns["SalaryTypeID"].ToString();
                foreach (DataRow item in Model.Rows)
                {
                    int salaryTypeId = Convert.ToInt32(item[columnName]);
                    if (salaryTypeId == 2)
                    {
                        string labelValue = Convert.ToString(item[12]);
                        string formulatext = Convert.ToString(item[9]);
                        string finalValue = (string.IsNullOrEmpty(labelValue) && string.IsNullOrEmpty(formulatext) && labelValue.Equals("") && formulatext.Equals("")) ? "0.00" : labelValue;

#line default
#line hidden
#nullable disable
                WriteLiteral("                        <div class=\"row mb-1\">\r\n                            <div class=\"col-sm-3\">\r\n                                <label");
                BeginWriteAttribute("for", " for=\"", 8697, "\"", 8703, 0);
                EndWriteAttribute();
                WriteLiteral(" class=\"col-form-label\">");
#nullable restore
#line 180 "D:\GitHub\SUN\sunerpm2l\ERP\Areas\Admin\Views\Employee\_employeeSalaryBreakup.cshtml"
                                                                Write(Convert.ToString(item[7]));

#line default
#line hidden
#nullable disable
                WriteLiteral("</label>\r\n                            </div>\r\n                            <div class=\"col-sm-1\">\r\n                                <label");
                BeginWriteAttribute("for", " for=\"", 8890, "\"", 8896, 0);
                EndWriteAttribute();
                WriteLiteral(" class=\"col-form-label\">(");
#nullable restore
#line 183 "D:\GitHub\SUN\sunerpm2l\ERP\Areas\Admin\Views\Employee\_employeeSalaryBreakup.cshtml"
                                                                 Write(Convert.ToString(item[8]).Replace(" ", ""));

#line default
#line hidden
#nullable disable
                WriteLiteral(")</label>\r\n                            </div>\r\n                            <div class=\"col-sm-5\">\r\n");
#nullable restore
#line 186 "D:\GitHub\SUN\sunerpm2l\ERP\Areas\Admin\Views\Employee\_employeeSalaryBreakup.cshtml"
                                  
                                    if (!string.IsNullOrEmpty(Convert.ToString(item[9])))
                                    {

#line default
#line hidden
#nullable disable
                WriteLiteral("                                        <input type=\"text\" class=\"form-control\"");
                BeginWriteAttribute("id", " id=\"", 9309, "\"", 9356, 1);
#nullable restore
#line 189 "D:\GitHub\SUN\sunerpm2l\ERP\Areas\Admin\Views\Employee\_employeeSalaryBreakup.cshtml"
WriteAttributeValue("", 9314, Convert.ToString(item[8]).Replace(" ",""), 9314, 42, false);

#line default
#line hidden
#nullable disable
                EndWriteAttribute();
                BeginWriteAttribute("placeholder", " placeholder=\"", 9357, "\"", 9397, 1);
#nullable restore
#line 189 "D:\GitHub\SUN\sunerpm2l\ERP\Areas\Admin\Views\Employee\_employeeSalaryBreakup.cshtml"
WriteAttributeValue("", 9371, Convert.ToString(item[9]), 9371, 26, false);

#line default
#line hidden
#nullable disable
                EndWriteAttribute();
                BeginWriteAttribute("value", " value=\"", 9398, "\"", 9417, 1);
#nullable restore
#line 189 "D:\GitHub\SUN\sunerpm2l\ERP\Areas\Admin\Views\Employee\_employeeSalaryBreakup.cshtml"
WriteAttributeValue("", 9406, finalValue, 9406, 11, false);

#line default
#line hidden
#nullable disable
                EndWriteAttribute();
                WriteLiteral(" readonly>\r\n");
#nullable restore
#line 190 "D:\GitHub\SUN\sunerpm2l\ERP\Areas\Admin\Views\Employee\_employeeSalaryBreakup.cshtml"
                                    }
                                    else
                                    {

#line default
#line hidden
#nullable disable
                WriteLiteral("                                        <input type=\"text\" class=\"form-control\"");
                BeginWriteAttribute("id", " id=\"", 9629, "\"", 9676, 1);
#nullable restore
#line 193 "D:\GitHub\SUN\sunerpm2l\ERP\Areas\Admin\Views\Employee\_employeeSalaryBreakup.cshtml"
WriteAttributeValue("", 9634, Convert.ToString(item[8]).Replace(" ",""), 9634, 42, false);

#line default
#line hidden
#nullable disable
                EndWriteAttribute();
                BeginWriteAttribute("placeholder", " placeholder=\"", 9677, "\"", 9717, 1);
#nullable restore
#line 193 "D:\GitHub\SUN\sunerpm2l\ERP\Areas\Admin\Views\Employee\_employeeSalaryBreakup.cshtml"
WriteAttributeValue("", 9691, Convert.ToString(item[9]), 9691, 26, false);

#line default
#line hidden
#nullable disable
                EndWriteAttribute();
                BeginWriteAttribute("value", " value=\"", 9718, "\"", 9737, 1);
#nullable restore
#line 193 "D:\GitHub\SUN\sunerpm2l\ERP\Areas\Admin\Views\Employee\_employeeSalaryBreakup.cshtml"
WriteAttributeValue("", 9726, finalValue, 9726, 11, false);

#line default
#line hidden
#nullable disable
                EndWriteAttribute();
                WriteLiteral(" oninput=\"fnCalculateSalary()\">\r\n");
#nullable restore
#line 194 "D:\GitHub\SUN\sunerpm2l\ERP\Areas\Admin\Views\Employee\_employeeSalaryBreakup.cshtml"
                                    }
                                

#line default
#line hidden
#nullable disable
                WriteLiteral("<input type=\"hidden\"");
                BeginWriteAttribute("value", " value=\"", 9863, "\"", 9897, 1);
#nullable restore
#line 195 "D:\GitHub\SUN\sunerpm2l\ERP\Areas\Admin\Views\Employee\_employeeSalaryBreakup.cshtml"
WriteAttributeValue("", 9871, Convert.ToString(item[6]), 9871, 26, false);

#line default
#line hidden
#nullable disable
                EndWriteAttribute();
                WriteLiteral(">\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                                <label");
                BeginWriteAttribute("for", " for=\"", 10027, "\"", 10033, 0);
                EndWriteAttribute();
                WriteLiteral(" class=\"col-form-label\">");
#nullable restore
#line 198 "D:\GitHub\SUN\sunerpm2l\ERP\Areas\Admin\Views\Employee\_employeeSalaryBreakup.cshtml"
                                                                Write(Convert.ToString(item[9]));

#line default
#line hidden
#nullable disable
                WriteLiteral("</label>\r\n                            </div>\r\n                        </div>\r\n");
#nullable restore
#line 201 "D:\GitHub\SUN\sunerpm2l\ERP\Areas\Admin\Views\Employee\_employeeSalaryBreakup.cshtml"
                    }
                    i++;
                }
            }
        

#line default
#line hidden
#nullable disable
                WriteLiteral("\r\n    </div>\r\n\r\n");
                WriteLiteral("    <div class=\"col-12 my-3\">\r\n        <button type=\"button\" onclick=\"fnSaveCalculatedSalary()\" class=\"btn btn-primary btn-info px-5 ladda-button\" id=\"btnSaveEmployeeSalaryBreakup\">Save</button>\r\n");
                WriteLiteral("    </div>\r\n");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Method = (string)__tagHelperAttribute_2.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_2);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "0a1a63b4594407ff8cb5a1cb43f89d099422d27d7f3bfca5afad79217b1bfe3032468", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_6);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "0a1a63b4594407ff8cb5a1cb43f89d099422d27d7f3bfca5afad79217b1bfe3033607", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_7);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
#nullable restore
#line 224 "D:\GitHub\SUN\sunerpm2l\ERP\Areas\Admin\Views\Employee\_employeeSalaryBreakup.cshtml"
Write(await Html.PartialAsync("_ValidationScriptsPartial"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"

<script type=""text/javascript"">
    function fnSaveEmployeeSalaryBreakup() {
        var ls = laddaStart('btnSaveEmployeeSalaryBreakup');
        modeldata = $(""#formAddUpdateEmployeeSalaryBreakup"").serialize();
        $.ajax({
            type: 'POST',
            url: '/Admin/Employee/AddUpdateEmployeeSalaryBreakup/',
            data: modeldata,
            dataType: 'json',
            beforeSend: function () { },
            success: function (data) {
                console.log(data.status);
                if (data.status) {
                    //notification
                    //$(""#canvasEmployeeHRAdministration"").hide();//('hide');
                    var test = Lobibox.notify('success', {
                        pauseDelayOnHover: true,
                        size: 'mini',
                        icon: 'bx bx-check-circle',
                        continueDelayOnInactiveTab: false,
                        position: 'bottom right',
                        msg: data.messag");
            WriteLiteral(@"e,
                    });
                    setTimeout(
                        function () {
                            //window.location.reload();
                            $(""#formAddUpdateEmployeeSalaryBreakup"").load(window.location.href + "" #formAddUpdateEmployeeSalaryBreakup"");
                        }, 3000);

                }
                else {
                    Lobibox.notify('error', {
                        pauseDelayOnHover: true,
                        size: 'mini',
                        icon: 'bx bx-check-circle',
                        continueDelayOnInactiveTab: false,
                        position: 'bottom right',
                        msg: '");
#nullable restore
#line 263 "D:\GitHub\SUN\sunerpm2l\ERP\Areas\Admin\Views\Employee\_employeeSalaryBreakup.cshtml"
                         Write(MessageHelper.Error);

#line default
#line hidden
#nullable disable
            WriteLiteral(@"'
                    });
                }
            },
            error: function (error) {
                laddaStop(ls);
                Lobibox.notify('error', {
                    pauseDelayOnHover: true,
                    size: 'mini',
                    icon: 'bx bx-check-circle',
                    continueDelayOnInactiveTab: false,
                    position: 'bottom right',
                    msg: '");
#nullable restore
#line 275 "D:\GitHub\SUN\sunerpm2l\ERP\Areas\Admin\Views\Employee\_employeeSalaryBreakup.cshtml"
                     Write(MessageHelper.Error);

#line default
#line hidden
#nullable disable
            WriteLiteral("\'\r\n                });\r\n            }\r\n        }).always(function () {\r\n            hideloader();\r\n        });\r\n\r\n    };\r\n\r\n\r\n    var jsonObjectOK = ");
#nullable restore
#line 285 "D:\GitHub\SUN\sunerpm2l\ERP\Areas\Admin\Views\Employee\_employeeSalaryBreakup.cshtml"
                  Write(Html.Raw(dataTable));

#line default
#line hidden
#nullable disable
            WriteLiteral(@";
    var filteredResult;
    $(document).ready(function () {
        fnCalculateSalary();
    });
    function fnCalculateSalary() {

        var dataTableObject = jsonObjectOK;

        // let ctc = document.getElementById('CostToCompany').value;

        filteredResult = dataTableObject.filter((obj) => {
            return obj.SalaryFormulaText !== null && obj.SalaryFormulaText !== '';
        });

        //alert(test[0].SalaryFormulaText);
        const divEarnings = document.getElementById('divForEarnings');
        const divWithInput = divEarnings.querySelectorAll('input[type=text]');
        //for (let i = 0; i < divWithInput.length; i++) {
        //    const inputId = divWithInput[i].id;
        //    debugger;
        //}
        let indexLength = Number(filteredResult.length - 1);
        if (filteredResult.length > 0) {
            $.each(filteredResult, function (i, k) {
                let test = k.SalaryFormulaText;
                let targetId = test.charAt(0);
    ");
            WriteLiteral(@"            var slicedValues = test.slice(2);
                if (test !== null && test !== """") {
                    for (const strChar of slicedValues) {
                        var replaceValue = document.getElementById(strChar);
                        if (replaceValue) {
                            let repValue = replaceValue.value;
                            slicedValues = slicedValues.replace(strChar, repValue);
                        }
                        else {
                            if (!replaceValue && slicedValues.includes('-' + strChar) && (strChar !== '0' && strChar !== '.')) {
                                slicedValues = slicedValues.replace(strChar, 0)
                            }
                            if (!replaceValue && slicedValues.includes('*' + strChar) && (strChar !== '0' && strChar !== '.')) {
                                slicedValues = slicedValues.replace(strChar, 1)
                            }
                        }
                    }
");
            WriteLiteral(@"                }
                let calcValue = slicedValues;//.replace('D', 1).replace('I', 1);

                let id = document.getElementById(targetId);
                var vals = eval(calcValue);

                if (id && vals) {
                    id.value = Number(parseFloat(vals.toFixed(0)));
                    // if (indexLength === i) {

                    //     // document.getElementById('NetSalaryPayable').value = Number(parseFloat(vals.toFixed(0)));
                    // }
                }
            });
        }
    }

    // window.onload = function () {
    //ACTUAL_DAYS
    // let urlEmployeeActualDays = '");
            WriteLiteral(@"@Url.Action(""GetEmployeeSalaryBreakupDetail"",""Employee"")';
    // let employeeId = document.getElementById('employeeId').value;
    // let params = { employeeId: employeeId };
    // debugger;
    // $.ajax({
    //     type: 'GET',
    //     url: urlEmployeeActualDays,
    //     data: params,
    //     dataType: 'json',
    //     success: function (data) {
    //         debugger;
    //         if (data.status) {

    //         }
    //         else {
    //             Lobibox.notify('error', {
    //                 pauseDelayOnHover: true,
    //                 size: 'mini',
    //                 icon: 'bx bx-check-circle',
    //                 continueDelayOnInactiveTab: false,
    //                 position: 'bottom right',
    //                 msg: 'Error to load employees actual days.'
    //             });
    //         }
    //     },
    //     error: function (error) {
    //         laddaStop(ls);
    //         Lobibox.notify('error', {
    //          ");
            WriteLiteral("   pauseDelayOnHover: true,\r\n    //             size: \'mini\',\r\n    //             icon: \'bx bx-check-circle\',\r\n    //             continueDelayOnInactiveTab: false,\r\n    //             position: \'bottom right\',\r\n    //             msg: \'");
            WriteLiteral("@MessageHelper.Error\'\r\n    //         });\r\n    //     }\r\n    // }).always(function () {\r\n    //     hideloader();\r\n    // });\r\n    // fnCalculateSalary();\r\n    // };\r\n\r\n    function fnSaveCalculatedSalary() {\r\n\r\n        let employeeId = ");
#nullable restore
#line 392 "D:\GitHub\SUN\sunerpm2l\ERP\Areas\Admin\Views\Employee\_employeeSalaryBreakup.cshtml"
                    Write(empId);

#line default
#line hidden
#nullable disable
            WriteLiteral(@";

        const divEarnings = document.getElementById('divForEarnings');
        const divEarningsWithInput = divEarnings.querySelectorAll('input[type=text]');
        const divEarningsWithHidden = divEarnings.querySelectorAll('input[type=hidden]');

        const divDeductions = document.getElementById('divForDeductions');
        const divDeductionsWithInput = divDeductions.querySelectorAll('input[type=text]');
        const divDeductionsWithHidden = divDeductions.querySelectorAll('input[type=hidden]');

        var jsonObjectCalculationData = [];
        for (let i = 0; i < divEarningsWithHidden.length; i++) {

            const salaryHeadID = divEarningsWithHidden[i].value;
            const salaryHeadValue = divEarningsWithInput[i].value;

            const tempJson = { 'EmployeeSalaryBreakupID': 0, 'EmployeeID': employeeId, 'SalaryHeadID': salaryHeadID, 'SalaryHeadValue': salaryHeadValue };
            jsonObjectCalculationData.push(tempJson);
            //jsonObjectCalculationData['");
            WriteLiteral(@"EmployeeSalaryBreakupID'] = 0;
            //jsonObjectCalculationData['EmployeeID'] = employeeId;
            //jsonObjectCalculationData['SalaryHeadID'] = salaryHeadID;
            //jsonObjectCalculationData['SalaryHeadValue'] = salaryHeadValue;
        }

        for (let i = 0; i < divDeductionsWithHidden.length; i++) {

            const salaryHeadID = divDeductionsWithHidden[i].value;
            const salaryHeadValue = divDeductionsWithInput[i].value;

            const tempJson = { 'EmployeeSalaryBreakupID': 0, 'EmployeeID': employeeId, 'SalaryHeadID': salaryHeadID, 'SalaryHeadValue': salaryHeadValue };
            jsonObjectCalculationData.push(tempJson);
        }

        var jsonString = JSON.stringify(jsonObjectCalculationData);
        var params = { employeeSalaryBreakupJson: jsonString };
        $.ajax({
            type: 'POST',
            url: '/Admin/Employee/AddUpdateEmployeeSalaryBreakup/',
            data: params,
            dataType: 'json',
            succes");
            WriteLiteral(@"s: function (data) {
                if (data.status) {
                    //notification
                    //$(""#canvasEmployeeHRAdministration"").hide();//('hide');
                    var test = Lobibox.notify('success', {
                        pauseDelayOnHover: true,
                        size: 'mini',
                        icon: 'bx bx-check-circle',
                        continueDelayOnInactiveTab: false,
                        position: 'bottom right',
                        msg: data.message,
                    });
                    setTimeout(
                        function () {
                            //window.location.reload();
                            $(""#formAddUpdateEmployeeSalaryBreakup"").load(window.location.href + "" #formAddUpdateEmployeeSalaryBreakup"");
                        }, 3000);

                }
                else {
                    Lobibox.notify('error', {
                        pauseDelayOnHover: true,
                        ");
            WriteLiteral("size: \'mini\',\r\n                        icon: \'bx bx-check-circle\',\r\n                        continueDelayOnInactiveTab: false,\r\n                        position: \'bottom right\',\r\n                        msg: \'");
#nullable restore
#line 458 "D:\GitHub\SUN\sunerpm2l\ERP\Areas\Admin\Views\Employee\_employeeSalaryBreakup.cshtml"
                         Write(MessageHelper.Error);

#line default
#line hidden
#nullable disable
            WriteLiteral(@"'
                    });
                }
            },
            error: function (error) {
                laddaStop(ls);
                Lobibox.notify('error', {
                    pauseDelayOnHover: true,
                    size: 'mini',
                    icon: 'bx bx-check-circle',
                    continueDelayOnInactiveTab: false,
                    position: 'bottom right',
                    msg: '");
#nullable restore
#line 470 "D:\GitHub\SUN\sunerpm2l\ERP\Areas\Admin\Views\Employee\_employeeSalaryBreakup.cshtml"
                     Write(MessageHelper.Error);

#line default
#line hidden
#nullable disable
            WriteLiteral(@"'
                });
            }
        }).always(function () {
            hideloader();
        });
    }

    function fnUpdateAmount() {

        let actualDays = parseFloat(document.getElementById('A').value) ?? 0;
        let actualWages = parseFloat(document.getElementById('B').value) ?? 0;
        let otHours = parseFloat(document.getElementById('C').value) ?? 0;
        let actualPayable = parseFloat(document.getElementById('E').value) ?? 0;
        let noOfDays = parseFloat(document.getElementById('F').value) ?? 0;
        let basicPerDay = parseFloat(document.getElementById('G').value) ?? 0;
        let daPerDay = parseFloat(document.getElementById('H').value) ?? 0;


        let total = basicPerDay + daPerDay;
        let daPercent = Number(((daPerDay / total) * 100).toFixed(2));
        let basicPercent = Number((100 - daPercent).toFixed(2));


        if (actualDays !== NaN && actualDays >= 0 && actualPayable !== NaN && actualPayable >= 0) {

            document.ge");
            WriteLiteral(@"tElementById('B').value = Number((actualPayable / actualDays).toFixed(2));

            let jValue = document.getElementById('J');
            jValue.value = Number(total * noOfDays);

            let kValue = document.getElementById('K');
            kValue.value = Number(actualPayable * 0.3);

            let lValue = document.getElementById('L');
            lValue.value = Number(actualPayable - parseFloat(jValue.value) - parseFloat(kValue.value));

            let qValue = document.getElementById('Q');
            qValue.value = Number(parseFloat(jValue.value) + parseFloat(kValue.value) + parseFloat(lValue.value));

            let nValue = document.getElementById('N');
            nValue.value = Number((parseFloat(jValue.value) * 0.12).toFixed(2));

            let oValue = document.getElementById('O');
            oValue.value = Number((parseFloat(jValue.value) * 0.0833).toFixed(2));

            let pValue = document.getElementById('P');
            pValue.value = Number((parseFloa");
            WriteLiteral(@"t(jValue.value) * 0.0367).toFixed(2));

            let xValue = document.getElementById('X');
            let rValue = 0;

            if (qValue.value > 11999) {
                let newRValue = document.getElementById('R');
                rValue = newRValue.value;
            }

            let sValue = document.getElementById('S');
            let tValue = document.getElementById('T');
            let uValue = document.getElementById('U');
            let vValue = document.getElementById('V');
            let wValue = document.getElementById('W');

            xValue.value = Number(parseFloat(qValue.value) - parseFloat(rValue) - parseFloat(sValue.value) - parseFloat(tValue.value) - parseFloat(uValue.value) - parseFloat(wValue.value) - parseFloat(vValue.value));
        }
    };

    function fnUpdateHRA() {

        let eValue = document.getElementById('E').value;
        let jValue = document.getElementById('J').value;
        let kValue = document.getElementById('K').value;
    ");
            WriteLiteral(@"    let lValue = document.getElementById('L').value;

        // Calculate when HRA value changed
        if (kValue !== NaN && kValue > 0) {
            let result = Number(parseInt(jValue) + parseInt(kValue));
            document.getElementById('L').value = Number((eValue - result).toFixed(2));
        }
        // if (lValue !== NaN && lValue > 0){
        //     document.getElementById('K').value = Number((jValue - lValue).toFixed(2));
        // }


        // if (jValue !== NaN && jValue > 0) {

        //     if (kValue !== NaN && kValue > 0) {
        //         document.getElementById('L').value = Number( (jValue - kValue).toFixed(2));
        //     }
        //     if (lValue !== NaN && lValue > 0){
        //         document.getElementById('K').value = Number((jValue - lValue).toFixed(2));
        //     }
        // }
        //let nValue = document.getElementById('N').value;
        //let oValue = document.getElementById('O').value;
        //let pValue = document.getEle");
            WriteLiteral(@"mentById('P').value;
    }

    function fnUpdateTA() {

        let eValue = document.getElementById('E').value;
        let jValue = document.getElementById('J').value;
        let kValue = document.getElementById('K').value;
        let lValue = document.getElementById('L').value;

        // Calculate when TA value changed
        if (lValue !== NaN && lValue > 0) {
            let result = Number(parseInt(jValue) + parseInt(lValue));
            document.getElementById('K').value = Number((eValue - result).toFixed(2));
        }
    }

    function fnUpdateBasic() {

        let jValue = document.getElementById('J').value;

        // Calculate when Basic value changed
        if (jValue !== NaN && jValue > 0) {

            let eValue = document.getElementById('E').value;
            let fValue = document.getElementById('F').value;
            let kValue = document.getElementById('K').value;
            let lValue = document.getElementById('L').value;

            document.g");
            WriteLiteral(@"etElementById('G').value = Number(parseInt(jValue) / parseInt(fValue));

            let nValue = document.getElementById('N');
            nValue.value = Number((parseFloat(jValue) * 0.12).toFixed(2));

            let oValue = document.getElementById('O');
            oValue.value = Number((parseFloat(jValue) * 0.0833).toFixed(2));

            let pValue = document.getElementById('P');
            pValue.value = Number((parseFloat(jValue) * 0.0367).toFixed(2));

            let result = Number(parseInt(jValue) + parseInt(kValue));
            document.getElementById('L').value = Number((eValue - result).toFixed(2));
        }
    }

    function fnUpdateActualPayable() {
        let aValue = document.getElementById('A').value;
        let bValue = document.getElementById('B').value;
        let cValue = document.getElementById('C').value;
        let eValue = document.getElementById('E');

        if (aValue !== NaN && aValue > 0 && bValue !== NaN && bValue > 0) {
            eValue.");
            WriteLiteral(@"value = Number(parseInt(aValue) * parseInt(bValue));
            if (cValue !== NaN && cValue > 0) {
                let perHourAmount = Number(parseInt(bValue) / 12);
                let otResult = Number(parseInt(perHourAmount) * parseInt(cValue));
                eValue.value = Number(parseInt(eValue.value) + parseInt(otResult));
            }
        }
    }

</script>");
        }
        #pragma warning restore 1998
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<System.Data.DataTable> Html { get; private set; } = default!;
        #nullable disable
    }
}
#pragma warning restore 1591
